{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> <p>Vizzu-Story - Build and present animated data stories</p> <p> Documentation     \u00b7 Examples     \u00b7 Code reference     \u00b7 Repository </p> </p> <p> </p>"},{"location":"#vizzu-story","title":"Vizzu-Story","text":""},{"location":"#about-the-extension","title":"About The Extension","text":"<p><code>Vizzu-Story</code> is an extension for the Vizzu <code>JavaScript</code> library that allows users to create interactive presentations from the animated data visualizations built with <code>Vizzu</code>.</p> <p>The extension provides a <code>Web Component</code> that contains the presentation and adds controls for navigating between slides - predefined stages within the story.</p>"},{"location":"#installation","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu-story</code></pre> <p>Or use it from CDN:</p> <pre><code>import VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js';</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Create a <code>vizzu-player</code> element that will contain the rendered story:</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element import the extension from <code>CDN</code> or local install:</p> <pre><code>&lt;script type=\"module\"&gt;\n  import VizzuPlayer from \n  'https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js';\n&lt;/script&gt;</code></pre> <p>Add the underlying data for the data story. You can use the same data definition formats as in the <code>Vizzu</code> library, but you must add the entire data set for the whole story in the initial step; you can not change this later. See Data chapter for more details on data formats.</p> <pre><code>const data = {\n    series: [{\n        name: 'Foo',\n        values: ['Alice', 'Bob', 'Ted']\n    }, {\n        name: 'Bar',\n        values: [15, 32, 12]\n    }, {\n        name: 'Baz',\n        values: [5, 3, 2]\n    }]\n};</code></pre> <p>Create the data story by defining a sequence of slides. A slide can be a single chart corresponding to an animate call from <code>Vizzu</code>. Or a slide can be a sequence of animation calls, in which case all of these animations will be played until the last one in the sequence, allowing for more complex transitions between slides.</p> <pre><code>const slides = [{\n    config: {\n        x: 'Foo',\n        y: 'Bar'\n    }\n}, {\n    config: {\n        color: 'Foo',\n        x: 'Baz',\n        geometry: 'circle'\n    }\n}];</code></pre> <p>Navigation controls beneath the chart will navigate between the slides. You can use the <code>PgUp</code> and <code>PgDn</code> buttons, left and right arrows to navigate between slides, and the <code>Home</code> and <code>End</code> buttons to jump to the first or last slide.</p> <p>On each chart, you can define the chart configuration and style with the same objects as in <code>Vizzu</code>. However, you can not modify the underlying data between the slides, only the data filter used.</p> <pre><code>interface Chart {\n  config?: Vizzu.Config.Chart;\n  filter?: Vizzu.Data.FilterCallback | null;\n  style?: Vizzu.Styles.Chart;\n  animOptions?: Vizzu.Anim.Options;\n}</code></pre> <p>Put the data and the slide list into the <code>story</code> descriptor object. Here you can also set the <code>story</code> <code>style</code> property to set the chart style used for the whole <code>story</code>.</p> <pre><code>const story = {\n    data: data,\n    slides: slides\n};</code></pre> <p>Then set up the created element with the configuration object:</p> <pre><code>const vp = document.querySelector('vizzu-player');\nvp.slides = story;</code></pre> <p>Check out a live example in JSFiddle!</p>"},{"location":"#documentation","title":"Documentation","text":"<p>Visit our Documentation site for more details and a step-by-step tutorial into <code>Vizzu-Story</code> or check out our Example gallery.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>We welcome contributions to the project; visit our Contributing guide for further info.</p>"},{"location":"#contact","title":"Contact","text":"<ul> <li>Join our Slack:   vizzu-community.slack.com</li> <li>Drop us a line at hello@vizzuhq.com</li> <li>Follow us on Twitter:   https://twitter.com/VizzuHQ</li> </ul>"},{"location":"#license","title":"License","text":"<p>Copyright \u00a9 2022-2023 Vizzu Inc.</p> <p>Released under the Apache 2.0 License.</p>"},{"location":"CODE_OF_CONDUCT/","title":"Code of Conduct","text":"<p>See Code of Conduct of the <code>Vizzu</code> community.</p>"},{"location":"CONTRIBUTING/","title":"Contributing","text":""},{"location":"CONTRIBUTING/#issues","title":"Issues","text":"<p>You can find our open issues in the project's issue tracker. Please let us know if you find any issues or have any feature requests there.</p>"},{"location":"CONTRIBUTING/#contributing_1","title":"Contributing","text":"<p>If you want to contribute to the project, your help is very welcome. Just fork the project, make your changes and send us a pull request. You can find the detailed description of how to do this in Github's guide to contributing to projects.</p>"},{"location":"CONTRIBUTING/#ci-cd","title":"CI-CD","text":""},{"location":"CONTRIBUTING/#development-environment","title":"Development environment","text":"<p>You can initialize the development environment of <code>Vizzu-Story</code> with <code>npm</code>.</p> <p>Run <code>npm install</code> or <code>npm update --dev</code> command to set up your environment.</p> <pre><code>npm install  # npm update --dev</code></pre> <p>Note: You can set up git hooks into your local git repository with the <code>prepare</code> script. Pre-commit hook is going to format the code with <code>prettier</code> and pre-push hook is going to run the CI steps.</p> <pre><code>npm run prepare</code></pre>"},{"location":"CONTRIBUTING/#ci","title":"CI","text":"<p>The CI steps check code formatting, run code analyses and run unit tests over the <code>Vizzu-Story</code> project.</p> <p>The <code>check</code> script runs the above tasks.</p> <pre><code>npm run check</code></pre>"},{"location":"CONTRIBUTING/#formatting","title":"Formatting","text":"<p>The <code>Vizzu-Story</code> project is formatted with <code>prettier</code>.</p> <p>Run the <code>prettier</code> script to format your code.</p> <pre><code>npm run prettier</code></pre> <p>Run the <code>check-prettier</code> script to check code formatting.</p> <pre><code>npm run check-prettier</code></pre>"},{"location":"CONTRIBUTING/#code-analyses","title":"Code analyses","text":"<p>The <code>Vizzu-Story</code> project is analysed with <code>eslint</code>.</p> <p>Run the <code>check-eslint</code> script to run code analyses.</p> <pre><code>npm run check-eslint</code></pre> <p>Run the <code>eslint</code> script to solve the fixable problems.</p> <pre><code>npm run eslint</code></pre>"},{"location":"CONTRIBUTING/#testing","title":"Testing","text":"<p>The <code>Vizzu-Story</code> project is tested with <code>jest</code> testing framework.</p> <p>Run the <code>test</code> script to run the tests.</p> <pre><code>npm test</code></pre>"},{"location":"CONTRIBUTING/#documentation","title":"Documentation","text":"<p>Run the <code>doc</code> make target to build the documentation.</p> <pre><code>make dev-py\nmake dev-js\n\nmake check\n\nmake doc</code></pre> <p>Online version can be read at vizzu-story.vizzuhq.com.</p>"},{"location":"CONTRIBUTING/#release","title":"Release","text":"<p><code>Vizzu-Story</code> is distributed on npm. Note: You need to be an administrator to release the project.</p> <p>If you want to release <code>Vizzu-Story</code> follow the steps below.</p> <ul> <li>You should increase the version number in <code>package.json</code>. The version bump   should be in a separated commit.</li> </ul> <ul> <li>Generate the release notes and publish the new release on   Releases.</li> </ul> <p>Note: Publishing a new release will automatically trigger the <code>release</code> workflow which builds and uploads the <code>Vizzu-Story</code> package to npm.</p> <p>You can build the package before a release with the <code>build</code> script.</p> <pre><code>npm run build</code></pre>"},{"location":"LICENSE/","title":"License","text":"<pre>Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</pre>"},{"location":"installation/","title":"Installation","text":"<p>Info</p> <p><code>Vizzu-Story</code> requires and downloads the Vizzu <code>JavaScript</code>/<code>C++</code> library from <code>jsDelivr CDN</code>, but you can also use a different or self-hosted version of it. Check Initialization chapter for more details.</p> <p>Install via npm:</p> <pre><code>npm install vizzu-story</code></pre> <p>Or use it from CDN:</p> <pre><code>import VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js';</code></pre>"},{"location":"dev/","title":"Development","text":"<p>We have compiled some information on the development of <code>Vizzu-Story</code> here. If you're interested in contributing to our open-source tool (which we highly encourage), please refer to the Contributing chapter. Our community upholds a strict Code of Conduct that we expect all members to follow.</p> <ul> <li>Contributing</li> <li>Code of Conduct</li> </ul>"},{"location":"examples/","title":"Examples","text":""},{"location":"examples/_basic/","title":"Basic example","text":"<p>The below story shows a basic use case for <code>Vizzu-Story</code>.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\n\n// Create data object\nconst data = {\n  series: [\n    {\n      name: \"Foo\",\n      values: [\"Alice\", \"Bob\", \"Ted\"],\n    },\n    {\n      name: \"Bar\",\n      values: [15, 32, 12],\n    },\n    {\n      name: \"Baz\",\n      values: [5, 3, 2],\n    },\n  ],\n};\n\n// Each slide here is a page in the final interactive story\nconst slides = [\n  {\n    config: {\n      x: \"Foo\",\n      y: \"Bar\",\n    },\n  },\n  {\n    config: {\n      color: \"Foo\",\n      x: \"Baz\",\n      geometry: \"circle\",\n    },\n  },\n];\n\n// Create story configuration object, add data and slides to it\nconst story = {\n  data,\n  slides,\n};\n\n// Set up the created element with the configuration object\nvp.slides = story;\n</code></pre>"},{"location":"examples/linkedinpoll/","title":"Presentation Poll Results","text":"<p>In August, 2022, we asked data scientists in 5 LinkedIn groups about how often they have to present the results of their analysis to business stakeholders. This is a data story about the results of that poll.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\nimport Csv2Js from \"https://vizzu-story.vizzuhq.com/0.4/assets/javascripts/csv2js.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\n\n// Create data object\nconst dataLoaded = Csv2Js.csv(\"https://vizzu-story.vizzuhq.com/0.4/examples/linkedinpoll/linkedinpoll.csv\", [\"Year\"]);\ndataLoaded.then((data) =&gt; {\n  // Each slide here is a page in the final interactive story\n  const slides = [\n    {\n      style: {\n        legend: {\n          label: { fontSize: \"1.1em\" },\n          paddingRight: \"-1em\",\n        },\n        plot: {\n          marker: { label: { fontSize: \"1.1em\" } },\n          paddingLeft: \"10em\",\n          xAxis: {\n            title: { color: \"#00000000\" },\n            label: { fontSize: \"1.1em\" },\n          },\n          yAxis: { label: { fontSize: \"1.1em\" } },\n        },\n        logo: { width: \"6em\" },\n        fontSize: \"0.8em\",\n      },\n      config: {\n        x: { set: [\"Vote percentage [%]\", \"Answer\"] },\n        y: \"Group number\",\n        color: \"Answer\",\n        label: \"Vote percentage [%]\",\n        title:\n          \"How often do you present your findings to business stakeholders?\",\n      },\n    },\n    {\n      style: { plot: { xAxis: { label: { color: \"#00000000\" } } } },\n      config: {\n        split: true,\n        title: \"2 or more is the most popular answer in every group\",\n      },\n    },\n    {\n      style: {\n        plot: {\n          marker: { label: { fontSize: \"0.916667em\" } },\n        },\n      },\n      config: {\n        x: { set: [\"Vote count\", \"Answer\"] },\n        label: \"Vote count\",\n        title: \"61% of the votes came from one group\",\n      },\n    },\n    [\n      {\n        style: { plot: { yAxis: { title: { color: \"#00000000\" } } } },\n        config: {\n          x: \"Answer\",\n          y: [\"Group number\", \"Vote count\"],\n          split: false,\n          legend: \"color\",\n        },\n      },\n      {\n        style: { plot: { marker: { label: { fontSize: \"1.1em\" } } } },\n        config: { y: \"Vote count\", title: \"More than 700 people voted\" },\n      },\n    ],\n    [\n      {\n        config: {\n          x: [\"Answer percentage [%]\", \"Answer\"],\n          y: null,\n          label: \"Answer percentage [%]\",\n        },\n      },\n      {\n        style: { plot: { xAxis: { label: { color: \"#00000000\" } } } },\n        config: {\n          coordSystem: \"polar\",\n          title:\n            \"More than two-third of respondents present at least once per month\",\n        },\n      },\n    ],\n  ];\n\n  // Create story configuration object, add data and slides to it\n  const story = {\n    data,\n    slides,\n  };\n\n  // Set the size of the HTML element\n  vp.style.cssText = \"width: 100%; height: 450px;\";\n\n  // Set up the created element with the configuration object\n  vp.slides = story;\n});\n</code></pre> <ul> <li>Group 1: AI &amp; ML - Analytics ,   Data Science . SAP BI/ Analytics Cloud /Tableau /Power BI /Birst</li> </ul> <ul> <li>Group 2: Artificial Intelligence,   Digital Transformation Data Science, Automation, Machine Learning Analytics</li> </ul> <ul> <li>Group 3: Data Scientist, Data   Analyst and Data Engineer</li> </ul> <ul> <li>Group 4: Python Developers Community   (moderated)</li> </ul> <ul> <li>Group 5: Data Analytics, Data   Science, Business Analytics, Business Intelligence, Data Scientist &amp; Analyst</li> </ul>"},{"location":"examples/population/","title":"UN Population Forecast","text":"<p>In this example, we explore the population of Africa between 1953-2098. On top of that, this story shows how to use the chart configuration presets. Check Vizzu - Chart presets chapter and Vizzu - Preset charts gallery for more details on the available chart presets.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\nimport Csv2Js from \"https://vizzu-story.vizzuhq.com/0.4/assets/javascripts/csv2js.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\nconst vizzuLoaded = import(vp.vizzuUrl);\n\n// Create data object\nconst dataLoaded = Csv2Js.csv(\"https://vizzu-story.vizzuhq.com/0.4/examples/population/population.csv\", [\"Year\"]);\n\nPromise.all([dataLoaded, vizzuLoaded]).then((results) =&gt; {\n  const data = results[0];\n  const Vizzu = results[1].default;\n\n  // Each slide here is a page in the final interactive story\n  const slides = [\n    {\n      filter: (record) =&gt; record.Continent === \"Africa\",\n      style: { plot: { xAxis: { label: { angle: 2.0 } } } },\n      config: Vizzu.presets.stackedArea({\n        x: \"Year\",\n        y: \"Medium\",\n        stackedBy: \"Subregion\",\n        title: \"Population of Africa 1953-2098\",\n      }),\n    },\n    {\n      config: Vizzu.presets.percentageArea({\n        x: \"Year\",\n        y: \"Medium\",\n        stackedBy: \"Subregion\",\n      }),\n    },\n    {\n      config: Vizzu.presets.stream({\n        x: \"Year\",\n        y: \"Medium\",\n        stackedBy: \"Subregion\",\n      }),\n    },\n    {\n      config: Vizzu.presets.violin({\n        x: \"Year\",\n        y: \"Medium\",\n        splittedBy: \"Subregion\",\n      }),\n    },\n  ];\n\n  // Create story configuration object, add data and slides to it\n  const story = {\n    data,\n    slides,\n  };\n\n  // Set the size of the HTML element\n  vp.style.cssText = \"width: 100%; height: 400px;\";\n\n  // Set up the created element with the configuration object\n  vp.slides = story;\n  vp.initializing.then((chart) =&gt; {\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature(\"tooltip\", true);\n  });\n});\n</code></pre>"},{"location":"examples/proglangs/","title":"Popularity of Programming Languages","text":"<p>What programming languages do data scientists use?</p> <p>This was one of the questions in the State of Data Science Reports published by Anaconda between 2020 and 2022. This data story shows the answers to this question.</p> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\nimport Csv2Js from \"https://vizzu-story.vizzuhq.com/0.4/assets/javascripts/csv2js.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\n\n// Create data object\nconst dataLoaded = Csv2Js.csv(\"https://vizzu-story.vizzuhq.com/0.4/examples/proglangs/proglangs.csv\", [\"Year\"]);\n\ndataLoaded.then((data) =&gt; {\n  // Each slide here is a page in the final interactive story\n  const slides = [\n    {\n      filter: (record) =&gt; record.Year === \"2022\",\n      style: {\n        logo: { width: \"5em\" },\n        plot: {\n          xAxis: { title: { color: \"#00000000\" } },\n          paddingLeft: \"2.5em\",\n          marker: {\n            colorPalette:\n              \"#3DAE2BFF \" +\n              \"#00833EFF \" +\n              \"#00A19BFF \" +\n              \"#0075A9FF \" +\n              \"#003764FF\",\n            minLightness: 0,\n            maxLightness: 0.4,\n          },\n        },\n        fontSize: \"0.8em\",\n      },\n      config: {\n        x: [\"Popularity\", \"Value[%]\"],\n        y: [\"Language\", \"Year\", \"Lang_year\"],\n        color: \"Popularity\",\n        label: \"Value[%]\",\n        align: \"stretch\",\n        title: \"Use of programming languages by data scientists in 2022\",\n        lightness: \"Year\",\n        legend: \"color\",\n      },\n    },\n    {\n      style: { plot: { xAxis: { label: { color: \"#00000000\" } } } },\n      config: {\n        split: true,\n        align: \"min\",\n        title: \"Python is always or frequently used by 58%\",\n      },\n    },\n\n    [\n      {\n        style: { plot: { xAxis: { label: { color: \"#999999FF\" } } } },\n        config: { split: false, align: \"stretch\" },\n      },\n      {\n        filter: (record) =&gt;\n          (record.Popularity === \"Always\" ||\n            record.Popularity === \"Frequently\") &amp;&amp;\n          record.Year === \"2022\",\n        config: { x: { range: { max: 100 } }, align: \"min\" },\n      },\n      {\n        config: {\n          sort: \"byValue\",\n          title: \"Python &amp; SQL are the most popular by a huge margin\",\n        },\n      },\n    ],\n    [\n      {\n        config: {\n          sort: \"none\",\n          title: \"Let's focus on the six languages with data since 2020\",\n        },\n      },\n      {\n        filter: (record) =&gt;\n          (record.Popularity === \"Always\" ||\n            record.Popularity === \"Frequently\") &amp;&amp;\n          (record.Language === \"R\" ||\n            record.Language === \"Python\" ||\n            record.Language === \"JavaScript\" ||\n            record.Language === \"Java\" ||\n            record.Language === \"C#\" ||\n            record.Language === \"C/C++\") &amp;&amp;\n          record.Year === \"2022\",\n      },\n      {\n        config: {\n          y: [\"Lang_year\", \"Year\"],\n          x: [\"Popularity\", \"Language\", \"Value[%]\"],\n        },\n      },\n    ],\n    [\n      {\n        filter: (record) =&gt;\n          (record.Popularity === \"Always\" ||\n            record.Popularity === \"Frequently\") &amp;&amp;\n          (record.Language === \"R\" ||\n            record.Language === \"Python\" ||\n            record.Language === \"JavaScript\" ||\n            record.Language === \"Java\" ||\n            record.Language === \"C#\" ||\n            record.Language === \"C/C++\") &amp;&amp;\n          record.Year !== \"2020\",\n      },\n      {\n        filter: (record) =&gt;\n          (record.Popularity === \"Always\" ||\n            record.Popularity === \"Frequently\") &amp;&amp;\n          (record.Language === \"R\" ||\n            record.Language === \"Python\" ||\n            record.Language === \"JavaScript\" ||\n            record.Language === \"Java\" ||\n            record.Language === \"C#\" ||\n            record.Language === \"C/C++\"),\n        config: {\n          title: \"C/C++, C#, Java and Javascript are gaining popularity\",\n        },\n      },\n    ],\n  ];\n\n  // Create story configuration object, add data and slides to it\n  const story = {\n    data,\n    slides,\n  };\n\n  // Set the size of the HTML element\n  vp.style.cssText = \"width: 100%; height: 600px;\";\n\n  // Set up the created element with the configuration object\n  vp.slides = story;\n  vp.initializing.then((chart) =&gt; {\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature(\"tooltip\", true);\n\n    // Set a handler that prevents showing specific elements\n    chart.on(\"plot-marker-label-draw\", (event) =&gt; {\n      if (event.data.text.split(\" \")[0] &lt; 5) event.preventDefault();\n    });\n  });\n});\n</code></pre>"},{"location":"examples/titanic/","title":"Passengers of the Titanic","text":"<p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\nimport Csv2Js from \"https://vizzu-story.vizzuhq.com/0.4/assets/javascripts/csv2js.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\nconst vizzuLoaded = import(vp.vizzuUrl);\n\n// Create data object\nconst dataLoaded = Csv2Js.csv(\"https://vizzu-story.vizzuhq.com/0.4/examples/titanic/titanic.csv\", [\"Pclass\"]);\n\nPromise.all([dataLoaded, vizzuLoaded]).then((results) =&gt; {\n  const data = results[0];\n  const Vizzu = results[1].default;\n\n  // Set the style of the charts in the story\n  const style = {\n    plot: {\n      yAxis: {\n        label: { fontSize: \"1em\", paddingRight: \"1.2em\" },\n        title: { color: \"#ffffff00\" },\n      },\n      xAxis: {\n        label: {\n          angle: \"2.5\",\n          fontSize: \"1.1em\",\n          paddingRight: \"0em\",\n          paddingTop: \"1em\",\n        },\n        title: { fontSize: \"1em\", paddingTop: \"2.5em\" },\n      },\n    },\n    logo: { width: \"5em\" },\n  };\n\n  // Each slide here is a page in the final interactive story\n  const slides = [\n    [\n      {\n        config: Vizzu.presets.bar({\n          x: \"Count\",\n          title: \"Passengers of the Titanic\",\n        }),\n      },\n    ],\n    [\n      { config: Vizzu.presets.stackedBar({ x: \"Count\", stackedBy: \"Sex\" }) },\n      {\n        config: Vizzu.presets.groupedBar({\n          x: \"Count\",\n          y: \"Sex\",\n          groupedBy: \"Sex\",\n          legend: \"color\",\n          title: \"Rougly one-third of the passengers were ladies\",\n        }),\n      },\n    ],\n    [\n      {\n        config: {\n          x: [\"Count\", \"Survived\"],\n          y: \"Sex\",\n          color: \"Sex\",\n          lightness: \"Survived\",\n          label: [\"Survived\", \"Count\"],\n        },\n      },\n      {\n        config: {\n          align: \"stretch\",\n          title: \"Much more women survived than men\",\n        },\n      },\n    ],\n    [\n      {\n        config: {\n          x: \"Count\",\n          align: \"none\",\n          label: null,\n          lightness: null,\n          title: \"Let's add the age of the passengers to the mix\",\n        },\n      },\n      { config: { y: [\"Count\", \"Sex\"], x: \"Age_group\", label: \"Count\" } },\n    ],\n    [\n      {\n        config: {\n          label: null,\n          title: \"Let's see how many people survived/died in these age groups\",\n        },\n      },\n      {\n        config: {\n          y: [\"Count\", \"Sex\", \"Survived\"],\n          lightness: \"Survived\",\n          legend: \"lightness\",\n        },\n      },\n      { config: { y: [\"Count\", \"Survived\", \"Sex\"] } },\n    ],\n    [\n      {\n        config: {\n          align: \"stretch\",\n          title: \"Survival rate varies a bit between age groups\",\n        },\n      },\n    ],\n    [\n      {\n        filter: (record) =&gt; record.Sex === \"male\",\n        config: {\n          title: \"But again shows a very different picture for men...\",\n        },\n      },\n    ],\n    [\n      { filter: null },\n      {\n        filter: (record) =&gt; record.Sex === \"female\",\n        config: { title: \"...and women\" },\n      },\n    ],\n  ];\n\n  // Create story configuration object, add data and slides to it\n  const story = {\n    data,\n    style,\n    slides,\n  };\n\n  // Set the size of the HTML element\n  vp.style.cssText = \"width: 100%; height: 400px;\";\n\n  // Set up the created element with the configuration object\n  vp.slides = story;\n  vp.initializing.then((chart) =&gt; {\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature(\"tooltip\", true);\n  });\n});\n</code></pre>"},{"location":"examples/trumptwitter/","title":"Trump Twitter Tirade","text":"<p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\nimport Csv2Js from \"https://vizzu-story.vizzuhq.com/0.4/assets/javascripts/csv2js.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\n\n// Create data object\nconst dataLoaded = Csv2Js.csv(\"https://vizzu-story.vizzuhq.com/0.4/examples/trumptwitter/trumptwitter.csv\", null, [\n  \"NewtoTwitter\",\n  \"Businessman\",\n  \"Nominee\",\n  \"President\",\n  \"RT_New to Twitter\",\n  \"RT_Businessman\",\n  \"RT_Nominee\",\n  \"RT_President\",\n  \"Obama\",\n]);\n\ndataLoaded.then((data) =&gt; {\n  // Set the style of the charts in the story\n  const style = {\n    tooltip: { fontSize: \"22px\" },\n    title: { paddingTop: \"1.2em\", fontSize: \"2.5em\" },\n    legend: { label: { fontSize: \"1.8em\" }, width: \"16em\" },\n    logo: { width: \"6em\" },\n    plot: {\n      marker: { label: { fontSize: \"1.5em\" } },\n      yAxis: {\n        label: { fontSize: \"1.5em\" },\n        title: { color: \"#ffffff00\" },\n        interlacing: { color: \"#ffffff00\" },\n      },\n      xAxis: {\n        label: { fontSize: \"1.6em\", paddingTop: \"1em\" },\n        title: { fontSize: \"1.4em\", paddingTop: \"2.5em\" },\n      },\n    },\n  };\n\n  // Each slide here is a page in the final interactive story\n  const slides = [\n    [\n      {\n        filter: (record) =&gt;\n          record.Firsttweet === \"Yes\" &amp;&amp; record.Dummy === \"No\",\n        config: {\n          channels: {\n            y: { set: [\"tweets\"] },\n            x: { set: [\"Period\", \"year\", \"month\"] },\n            color: \"Period\",\n          },\n          title: \"Trump started tweeting in May '09\",\n        },\n      },\n    ],\n    [\n      {\n        filter: (record) =&gt;\n          record.Period === \"New to Twitter\" &amp;&amp; record.Dummy === \"No\",\n        config: { title: \"In the first two years he wasn't very active\" },\n      },\n    ],\n    [\n      {\n        filter: (record) =&gt;\n          (record.Period === \"New to Twitter\" ||\n            record.Period === \"Businessman\") &amp;&amp;\n          record.Dummy === \"No\",\n        config: { title: \"Then he got hooked on\" },\n      },\n    ],\n    [\n      {\n        filter: (record) =&gt;\n          (record.Period === \"New to Twitter\" ||\n            record.Period === \"Businessman\" ||\n            record.Period === \"Nominee\") &amp;&amp;\n          record.Dummy === \"No\",\n        config: {\n          title: \"Interesting trend after becoming a presidential nominee\",\n        },\n      },\n    ],\n    [\n      {\n        filter: (record) =&gt; record.Dummy === \"No\",\n        config: { title: \"And after he became President\" },\n      },\n    ],\n    [\n      { config: { geometry: \"area\", align: \"center\" } },\n      { config: { title: \"All of Trump's tweets until May 2020\" } },\n    ],\n    [\n      {\n        config: {\n          y: \"retweetcount\",\n          title: \"And the number of times these were retweeted\",\n        },\n      },\n    ],\n    [\n      {\n        config: {\n          y: \"tweets\",\n          title: \"Let's focus on the number of tweets for now\",\n        },\n      },\n      { config: { x: { set: [\"year\", \"month\"] }, color: null } },\n    ],\n    [\n      {\n        config: {\n          y: [\"tweets\", \"Type\"],\n          color: \"Type\",\n          title: \"Original tweets, retweets &amp; replies sent\",\n        },\n        style: {\n          plot: { marker: { colorPalette: \"#A0CDEBFF #60C0E6FF #1DA1F3FF\" } },\n        },\n      },\n    ],\n    [\n      {\n        config: { split: true, align: \"none\" },\n        style: { plot: { yAxis: { label: { color: \"#ffffff00\" } } } },\n      },\n    ],\n    [\n      {\n        config: {\n          split: false,\n          align: \"stretch\",\n          title: \"Original tweets, retweets &amp; replies sent (%)\",\n        },\n        style: { plot: { yAxis: { label: { color: \"#999999ff\" } } } },\n      },\n    ],\n    [\n      { config: { align: \"center\", title: \"\" } },\n      {\n        config: { y: \"tweets\", color: null, legend: \"lightness\" },\n        style: { plot: { marker: { colorPalette: \"null\" } } },\n      },\n      {\n        config: {\n          y: [\"tweets\", \"Tool\"],\n          color: \"Tool\",\n          title: \"Tools Trump Used to Tweet\",\n          legend: \"color\",\n        },\n        style: {\n          plot: {\n            marker: {\n              colorPalette: \"#597696FF #ED2828FF #26EC87FF #29B9BFFF \",\n            },\n          },\n        },\n      },\n    ],\n    [\n      {\n        config: { split: true, align: \"none\" },\n        style: { plot: { yAxis: { label: { color: \"#ffffff00\" } } } },\n      },\n    ],\n    [\n      { config: { geometry: \"rectangle\" } },\n      {\n        config: {\n          x: [\"tweets\", \"year\", \"month\"],\n          y: \"Tool\",\n          geometry: \"rectangle\",\n          split: false,\n          align: \"none\",\n        },\n        style: {\n          plot: {\n            xAxis: { title: { color: \"#ffffff00\" } },\n            yAxis: { label: { color: \"#999999ff\" } },\n          },\n        },\n      },\n      { config: { x: \"tweets\", label: \"tweets\" } },\n    ],\n    [\n      { config: { x: [\"tweets\", \"AMPM\", \"hour12\"], label: null } },\n      {\n        config: { y: [\"tweets\", \"Tool\"], x: [\"AMPM\", \"hour12\"], align: \"max\" },\n      },\n      { config: { geometry: \"area\" } },\n      {\n        config: {\n          coordSystem: \"polar\",\n          rotate: 180,\n          title: \"Time of Day When Trump Tweeted\",\n        },\n        style: {\n          plot: {\n            yAxis: { label: { color: \"#ffffff00\" } },\n            xAxis: {\n              label: {\n                fontSize: \"2em\",\n                paddingBottom: \"2.5em\",\n                paddingTop: \"2.5em\",\n                paddingLeft: \"2.5em\",\n                paddingRight: \"2.5em\",\n              },\n            },\n          },\n        },\n      },\n    ],\n    [\n      {\n        config: {\n          y: [\"Businessman\", \"Tool\"],\n          title: \"Times Trump Tweeted When Being a Businessman\",\n        },\n      },\n    ],\n    [\n      {\n        config: {\n          y: [\"President\", \"Tool\"],\n          title: \"Times Trump Tweeted When Being President\",\n        },\n      },\n    ],\n  ];\n\n  // Create story configuration object, add data and slides to it\n  const story = {\n    data,\n    style,\n    slides,\n  };\n\n  // Set the size of the HTML element\n  vp.style.cssText = \"width: 100%; height: 400px;\";\n\n  // Set up the created element with the configuration object\n  vp.slides = story;\n  vp.initializing.then((chart) =&gt; {\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature(\"tooltip\", true);\n  });\n});\n</code></pre>"},{"location":"examples/usbudget/","title":"US Federal R&amp;D budget","text":"<p>US Federal R&amp;D budget In this more involved example, we explore the history of the US Federal R&amp;D budget between 1955-2020. On top of the base functionality, this story showcases:</p> <ul> <li>Styling the overall story</li> <li>Setting the size of the story</li> <li>Slides with multiple steps</li> </ul> <p></p> <p>Create a <code>vizzu-player</code> element that will contain the rendered story.</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre> <p>In a script module element:</p> <pre><code>// Import VizzuPlayer\nimport VizzuPlayer from \"https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js\";\nimport Csv2Js from \"https://vizzu-story.vizzuhq.com/0.4/assets/javascripts/csv2js.js\";\n\n// Get the created element\nconst vp = document.querySelector(\"vizzu-player\");\n\n// Create data object\nconst dataLoaded = Csv2Js.csv(\"https://vizzu-story.vizzuhq.com/0.4/examples/usbudget/usbudget.csv\", [\"Year\"]);\n\ndataLoaded.then((data) =&gt; {\n  // Set the style of the charts in the story\n\n  const style = {\n    plot: {\n      yAxis: {\n        label: {\n          fontSize: \"1em\",\n          paddingRight: \"1.2em\",\n        },\n        title: { color: \"#ffffff00\" },\n      },\n      xAxis: {\n        label: {\n          angle: \"2.5\",\n          fontSize: \"1.1em\",\n          paddingRight: \"0em\",\n          paddingTop: \"1em\",\n        },\n        title: { fontSize: \"0.8em\", paddingTop: \"2.5em\" },\n      },\n    },\n    logo: { width: \"5em\" },\n  };\n\n  // Each slide here is a page in the final interactive story\n  const slides = [\n    // Add the first slide,\n    // containing a single animation step that sets the initial chart\n    {\n      // Only include rows where the Function value != Defense\n      filter: (record) =&gt; record.Function !== \"Defense\",\n      config: {\n        channels: {\n          y: {\n            set: [\"Amount[B$]\", \"Function\"],\n            // Set the range of the y-axis\n            // to the min and max of the data being shown\n            // default value is 110% of the maximum value\n            range: { min: \"0%\", max: \"100%\" },\n          },\n          x: { set: [\"Year\"] },\n          color: \"Function\",\n        },\n        title: \"Stacked Area Chart - U.S. R&amp;D Budget in 1955-2020\",\n        geometry: \"area\",\n      },\n    },\n    // Show components side-by-side\n    {\n      config: {\n        split: true,\n        title: \"Show Components Side by Side\",\n      },\n    },\n    // This slide contains multiple steps\n    [\n      // Step 1 - let's get back to the previous view\n      { config: { split: false } },\n      // Step 2 - Add the defense function to the chart by removing it from the filter\n      {\n        filter: null,\n        config: { title: \"Add New Category While Keeping the Context\" },\n      },\n    ],\n    // Show share of components\n    {\n      config: {\n        align: \"stretch\",\n        title: \"Show Share of Components (%)\",\n      },\n    },\n    // Compare data from 1955 and 2020\n    [\n      // Step 1 - switch back to value instead of percentage\n      { config: { align: \"none\" } },\n      // Step 2 - switch to a stacked column chart by changing the geometry\n      {\n        config: {\n          geometry: \"rectangle\",\n        },\n      },\n      // Step 3 - zoom to data from the first and last years\n      {\n        filter: (record) =&gt; record.Year === \"1955\" || record.Year === \"2020\",\n        config: {\n          title: \"Zoom to Specific Elements\",\n        },\n      },\n    ],\n    // Group &amp; rearrange elements for comparison\n    [\n      {\n        config: {\n          x: [\"Year\", \"Function\"],\n          y: \"Amount[B$]\",\n          label: \"Amount[B$]\",\n          title: \"Group &amp; Rearrange for Better Comparison\",\n        },\n      },\n      {\n        config: { x: [\"Function\", \"Year\"] },\n      },\n    ],\n  ];\n\n  // Create story configuration object, add data, style and slides to it\n  const story = {\n    data,\n    style,\n    slides,\n  };\n\n  // Set the size of the HTML element\n  vp.style.cssText = \"width: 100%; height: 400px;\";\n\n  // Set up the created element with the configuration object\n  vp.slides = story;\n  vp.initializing.then((chart) =&gt; {\n    // Switch on the tooltip that appears\n    // when the user hovers the mouse over a chart element\n    chart.feature(\"tooltip\", true);\n\n    // Set a handler that prevents showing the year values that are not divisible by 5\n    chart.on(\"plot-axis-label-draw\", (event) =&gt; {\n      const Year = parseFloat(event.data.text);\n      if (!isNaN(Year) &amp;&amp; Year &gt; 1950 &amp;&amp; Year &lt; 2020 &amp;&amp; Year % 5 !== 0) {\n        event.preventDefault();\n      }\n    });\n  });\n});\n</code></pre>"},{"location":"reference/","title":"Code reference","text":"<p>Vizzu-Story / Exports</p>"},{"location":"reference/#vizzu-story-js-library-reference","title":"Vizzu-Story JS Library Reference","text":"<p>This is the API reference document of the <code>Vizzu-Story</code> <code>JS</code> library. It provides information about every detail of the API. This works best for users who already have a basic understanding of the <code>Vizzu-Story</code> library and its logic.</p> <p>In case you're just getting started with <code>Vizzu-Story</code>, we strongly recommend visiting our Tutorial first.</p>"},{"location":"reference/#library-overview","title":"Library Overview","text":"<p>The main entry point of the library is the VizzuPlayer class, and its most important component is the slides accessor.</p> <ul> <li>VizzuPlayer class<ul> <li>constructor()</li> <li>slides (Story) :   <code>void</code></li> </ul> </li> </ul>"},{"location":"reference/#details","title":"Details","text":"<p>You can find all interface declarations and types under these namespaces.</p> <ul> <li>Story - Contains slides, underlying data and chart's   style settings</li> <li>Phase - A single step of a slide</li> </ul>"},{"location":"reference/modules/","title":"Modules","text":"<p>Vizzu-Story / Exports</p>"},{"location":"reference/modules/#vizzu-story","title":"Vizzu-Story","text":""},{"location":"reference/modules/#namespaces","title":"Namespaces","text":"<ul> <li>Vizzu</li> </ul>"},{"location":"reference/modules/#classes","title":"Classes","text":"<ul> <li>VizzuPlayer</li> </ul>"},{"location":"reference/modules/#interfaces","title":"Interfaces","text":"<ul> <li>Phase</li> <li>Story</li> </ul>"},{"location":"reference/modules/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/#slide","title":"Slide","text":"<p>\u01ac Slide: <code>Phase</code> | <code>Phase</code>[]</p> <p>Slide consists of a single or multiple phase. Controls will navigate between slides.</p>"},{"location":"reference/modules/#vizzu","title":"Vizzu","text":"<p>\u01ac Vizzu: typeof <code>vizzu</code></p>"},{"location":"reference/classes/VizzuPlayer/","title":"VizzuPlayer","text":"<p>Vizzu-Story / Exports / VizzuPlayer</p>"},{"location":"reference/classes/VizzuPlayer/#class-vizzuplayer","title":"Class: VizzuPlayer","text":""},{"location":"reference/classes/VizzuPlayer/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>HTMLElement</code></p> <p>\u21b3 <code>VizzuPlayer</code></p> </li> </ul>"},{"location":"reference/classes/VizzuPlayer/#constructors","title":"Constructors","text":""},{"location":"reference/classes/VizzuPlayer/#constructor","title":"constructor","text":"<p>\u2022 new VizzuPlayer()</p> <p>Inherited from</p> <p>HTMLElement.constructor</p>"},{"location":"reference/classes/VizzuPlayer/#properties","title":"Properties","text":""},{"location":"reference/classes/VizzuPlayer/#attribute_node","title":"ATTRIBUTE_NODE","text":"<p>\u2022 <code>Readonly</code> ATTRIBUTE_NODE: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.ATTRIBUTE_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#cdata_section_node","title":"CDATA_SECTION_NODE","text":"<p>\u2022 <code>Readonly</code> CDATA_SECTION_NODE: <code>number</code></p> <p>node is a CDATASection node.</p> <p>Inherited from</p> <p>HTMLElement.CDATA_SECTION_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#comment_node","title":"COMMENT_NODE","text":"<p>\u2022 <code>Readonly</code> COMMENT_NODE: <code>number</code></p> <p>node is a Comment node.</p> <p>Inherited from</p> <p>HTMLElement.COMMENT_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#document_fragment_node","title":"DOCUMENT_FRAGMENT_NODE","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_FRAGMENT_NODE: <code>number</code></p> <p>node is a DocumentFragment node.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_FRAGMENT_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#document_node","title":"DOCUMENT_NODE","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_NODE: <code>number</code></p> <p>node is a document.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#document_position_contained_by","title":"DOCUMENT_POSITION_CONTAINED_BY","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_POSITION_CONTAINED_BY: <code>number</code></p> <p>Set when other is a descendant of node.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_POSITION_CONTAINED_BY</p>"},{"location":"reference/classes/VizzuPlayer/#document_position_contains","title":"DOCUMENT_POSITION_CONTAINS","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_POSITION_CONTAINS: <code>number</code></p> <p>Set when other is an ancestor of node.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_POSITION_CONTAINS</p>"},{"location":"reference/classes/VizzuPlayer/#document_position_disconnected","title":"DOCUMENT_POSITION_DISCONNECTED","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_POSITION_DISCONNECTED: <code>number</code></p> <p>Set when node and other are not in the same tree.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_POSITION_DISCONNECTED</p>"},{"location":"reference/classes/VizzuPlayer/#document_position_following","title":"DOCUMENT_POSITION_FOLLOWING","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_POSITION_FOLLOWING: <code>number</code></p> <p>Set when other is following node.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_POSITION_FOLLOWING</p>"},{"location":"reference/classes/VizzuPlayer/#document_position_implementation_specific","title":"DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</p>"},{"location":"reference/classes/VizzuPlayer/#document_position_preceding","title":"DOCUMENT_POSITION_PRECEDING","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_POSITION_PRECEDING: <code>number</code></p> <p>Set when other is preceding node.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_POSITION_PRECEDING</p>"},{"location":"reference/classes/VizzuPlayer/#document_type_node","title":"DOCUMENT_TYPE_NODE","text":"<p>\u2022 <code>Readonly</code> DOCUMENT_TYPE_NODE: <code>number</code></p> <p>node is a doctype.</p> <p>Inherited from</p> <p>HTMLElement.DOCUMENT_TYPE_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#element_node","title":"ELEMENT_NODE","text":"<p>\u2022 <code>Readonly</code> ELEMENT_NODE: <code>number</code></p> <p>node is an element.</p> <p>Inherited from</p> <p>HTMLElement.ELEMENT_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#entity_node","title":"ENTITY_NODE","text":"<p>\u2022 <code>Readonly</code> ENTITY_NODE: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.ENTITY_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#entity_reference_node","title":"ENTITY_REFERENCE_NODE","text":"<p>\u2022 <code>Readonly</code> ENTITY_REFERENCE_NODE: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.ENTITY_REFERENCE_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#notation_node","title":"NOTATION_NODE","text":"<p>\u2022 <code>Readonly</code> NOTATION_NODE: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.NOTATION_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#processing_instruction_node","title":"PROCESSING_INSTRUCTION_NODE","text":"<p>\u2022 <code>Readonly</code> PROCESSING_INSTRUCTION_NODE: <code>number</code></p> <p>node is a ProcessingInstruction node.</p> <p>Inherited from</p> <p>HTMLElement.PROCESSING_INSTRUCTION_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#text_node","title":"TEXT_NODE","text":"<p>\u2022 <code>Readonly</code> TEXT_NODE: <code>number</code></p> <p>node is a Text node.</p> <p>Inherited from</p> <p>HTMLElement.TEXT_NODE</p>"},{"location":"reference/classes/VizzuPlayer/#accesskey","title":"accessKey","text":"<p>\u2022 accessKey: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.accessKey</p>"},{"location":"reference/classes/VizzuPlayer/#accesskeylabel","title":"accessKeyLabel","text":"<p>\u2022 <code>Readonly</code> accessKeyLabel: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.accessKeyLabel</p>"},{"location":"reference/classes/VizzuPlayer/#ariaatomic","title":"ariaAtomic","text":"<p>\u2022 ariaAtomic: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaAtomic</p>"},{"location":"reference/classes/VizzuPlayer/#ariaautocomplete","title":"ariaAutoComplete","text":"<p>\u2022 ariaAutoComplete: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaAutoComplete</p>"},{"location":"reference/classes/VizzuPlayer/#ariabusy","title":"ariaBusy","text":"<p>\u2022 ariaBusy: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaBusy</p>"},{"location":"reference/classes/VizzuPlayer/#ariachecked","title":"ariaChecked","text":"<p>\u2022 ariaChecked: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaChecked</p>"},{"location":"reference/classes/VizzuPlayer/#ariacolcount","title":"ariaColCount","text":"<p>\u2022 ariaColCount: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaColCount</p>"},{"location":"reference/classes/VizzuPlayer/#ariacolindex","title":"ariaColIndex","text":"<p>\u2022 ariaColIndex: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaColIndex</p>"},{"location":"reference/classes/VizzuPlayer/#ariacolindextext","title":"ariaColIndexText","text":"<p>\u2022 ariaColIndexText: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaColIndexText</p>"},{"location":"reference/classes/VizzuPlayer/#ariacolspan","title":"ariaColSpan","text":"<p>\u2022 ariaColSpan: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaColSpan</p>"},{"location":"reference/classes/VizzuPlayer/#ariacurrent","title":"ariaCurrent","text":"<p>\u2022 ariaCurrent: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaCurrent</p>"},{"location":"reference/classes/VizzuPlayer/#ariadisabled","title":"ariaDisabled","text":"<p>\u2022 ariaDisabled: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaDisabled</p>"},{"location":"reference/classes/VizzuPlayer/#ariaexpanded","title":"ariaExpanded","text":"<p>\u2022 ariaExpanded: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaExpanded</p>"},{"location":"reference/classes/VizzuPlayer/#ariahaspopup","title":"ariaHasPopup","text":"<p>\u2022 ariaHasPopup: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaHasPopup</p>"},{"location":"reference/classes/VizzuPlayer/#ariahidden","title":"ariaHidden","text":"<p>\u2022 ariaHidden: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaHidden</p>"},{"location":"reference/classes/VizzuPlayer/#ariainvalid","title":"ariaInvalid","text":"<p>\u2022 ariaInvalid: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaInvalid</p>"},{"location":"reference/classes/VizzuPlayer/#ariakeyshortcuts","title":"ariaKeyShortcuts","text":"<p>\u2022 ariaKeyShortcuts: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaKeyShortcuts</p>"},{"location":"reference/classes/VizzuPlayer/#arialabel","title":"ariaLabel","text":"<p>\u2022 ariaLabel: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaLabel</p>"},{"location":"reference/classes/VizzuPlayer/#arialevel","title":"ariaLevel","text":"<p>\u2022 ariaLevel: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaLevel</p>"},{"location":"reference/classes/VizzuPlayer/#arialive","title":"ariaLive","text":"<p>\u2022 ariaLive: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaLive</p>"},{"location":"reference/classes/VizzuPlayer/#ariamodal","title":"ariaModal","text":"<p>\u2022 ariaModal: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaModal</p>"},{"location":"reference/classes/VizzuPlayer/#ariamultiline","title":"ariaMultiLine","text":"<p>\u2022 ariaMultiLine: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaMultiLine</p>"},{"location":"reference/classes/VizzuPlayer/#ariamultiselectable","title":"ariaMultiSelectable","text":"<p>\u2022 ariaMultiSelectable: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaMultiSelectable</p>"},{"location":"reference/classes/VizzuPlayer/#ariaorientation","title":"ariaOrientation","text":"<p>\u2022 ariaOrientation: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaOrientation</p>"},{"location":"reference/classes/VizzuPlayer/#ariaplaceholder","title":"ariaPlaceholder","text":"<p>\u2022 ariaPlaceholder: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaPlaceholder</p>"},{"location":"reference/classes/VizzuPlayer/#ariaposinset","title":"ariaPosInSet","text":"<p>\u2022 ariaPosInSet: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaPosInSet</p>"},{"location":"reference/classes/VizzuPlayer/#ariapressed","title":"ariaPressed","text":"<p>\u2022 ariaPressed: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaPressed</p>"},{"location":"reference/classes/VizzuPlayer/#ariareadonly","title":"ariaReadOnly","text":"<p>\u2022 ariaReadOnly: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaReadOnly</p>"},{"location":"reference/classes/VizzuPlayer/#ariarequired","title":"ariaRequired","text":"<p>\u2022 ariaRequired: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaRequired</p>"},{"location":"reference/classes/VizzuPlayer/#ariaroledescription","title":"ariaRoleDescription","text":"<p>\u2022 ariaRoleDescription: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaRoleDescription</p>"},{"location":"reference/classes/VizzuPlayer/#ariarowcount","title":"ariaRowCount","text":"<p>\u2022 ariaRowCount: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaRowCount</p>"},{"location":"reference/classes/VizzuPlayer/#ariarowindex","title":"ariaRowIndex","text":"<p>\u2022 ariaRowIndex: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaRowIndex</p>"},{"location":"reference/classes/VizzuPlayer/#ariarowindextext","title":"ariaRowIndexText","text":"<p>\u2022 ariaRowIndexText: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaRowIndexText</p>"},{"location":"reference/classes/VizzuPlayer/#ariarowspan","title":"ariaRowSpan","text":"<p>\u2022 ariaRowSpan: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaRowSpan</p>"},{"location":"reference/classes/VizzuPlayer/#ariaselected","title":"ariaSelected","text":"<p>\u2022 ariaSelected: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaSelected</p>"},{"location":"reference/classes/VizzuPlayer/#ariasetsize","title":"ariaSetSize","text":"<p>\u2022 ariaSetSize: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaSetSize</p>"},{"location":"reference/classes/VizzuPlayer/#ariasort","title":"ariaSort","text":"<p>\u2022 ariaSort: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaSort</p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluemax","title":"ariaValueMax","text":"<p>\u2022 ariaValueMax: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaValueMax</p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluemin","title":"ariaValueMin","text":"<p>\u2022 ariaValueMin: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaValueMin</p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluenow","title":"ariaValueNow","text":"<p>\u2022 ariaValueNow: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaValueNow</p>"},{"location":"reference/classes/VizzuPlayer/#ariavaluetext","title":"ariaValueText","text":"<p>\u2022 ariaValueText: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.ariaValueText</p>"},{"location":"reference/classes/VizzuPlayer/#assignedslot","title":"assignedSlot","text":"<p>\u2022 <code>Readonly</code> assignedSlot: <code>HTMLSlotElement</code></p> <p>Inherited from</p> <p>HTMLElement.assignedSlot</p>"},{"location":"reference/classes/VizzuPlayer/#attributes","title":"attributes","text":"<p>\u2022 <code>Readonly</code> attributes: <code>NamedNodeMap</code></p> <p>Inherited from</p> <p>HTMLElement.attributes</p>"},{"location":"reference/classes/VizzuPlayer/#autocapitalize","title":"autocapitalize","text":"<p>\u2022 autocapitalize: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.autocapitalize</p>"},{"location":"reference/classes/VizzuPlayer/#autofocus","title":"autofocus","text":"<p>\u2022 autofocus: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.autofocus</p>"},{"location":"reference/classes/VizzuPlayer/#baseuri","title":"baseURI","text":"<p>\u2022 <code>Readonly</code> baseURI: <code>string</code></p> <p>Returns node's node document's document base URL.</p> <p>Inherited from</p> <p>HTMLElement.baseURI</p>"},{"location":"reference/classes/VizzuPlayer/#childelementcount","title":"childElementCount","text":"<p>\u2022 <code>Readonly</code> childElementCount: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.childElementCount</p>"},{"location":"reference/classes/VizzuPlayer/#childnodes","title":"childNodes","text":"<p>\u2022 <code>Readonly</code> childNodes: <code>NodeListOf</code>\\&lt;<code>ChildNode</code>&gt;</p> <p>Returns the children.</p> <p>Inherited from</p> <p>HTMLElement.childNodes</p>"},{"location":"reference/classes/VizzuPlayer/#children","title":"children","text":"<p>\u2022 <code>Readonly</code> children: <code>HTMLCollection</code></p> <p>Returns the child elements.</p> <p>Inherited from</p> <p>HTMLElement.children</p>"},{"location":"reference/classes/VizzuPlayer/#classlist","title":"classList","text":"<p>\u2022 <code>Readonly</code> classList: <code>DOMTokenList</code></p> <p>Allows for manipulation of element's class content attribute as a set of whitespace-separated tokens through a DOMTokenList object.</p> <p>Inherited from</p> <p>HTMLElement.classList</p>"},{"location":"reference/classes/VizzuPlayer/#classname","title":"className","text":"<p>\u2022 className: <code>string</code></p> <p>Returns the value of element's class content attribute. Can be set to change it.</p> <p>Inherited from</p> <p>HTMLElement.className</p>"},{"location":"reference/classes/VizzuPlayer/#clientheight","title":"clientHeight","text":"<p>\u2022 <code>Readonly</code> clientHeight: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.clientHeight</p>"},{"location":"reference/classes/VizzuPlayer/#clientleft","title":"clientLeft","text":"<p>\u2022 <code>Readonly</code> clientLeft: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.clientLeft</p>"},{"location":"reference/classes/VizzuPlayer/#clienttop","title":"clientTop","text":"<p>\u2022 <code>Readonly</code> clientTop: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.clientTop</p>"},{"location":"reference/classes/VizzuPlayer/#clientwidth","title":"clientWidth","text":"<p>\u2022 <code>Readonly</code> clientWidth: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.clientWidth</p>"},{"location":"reference/classes/VizzuPlayer/#contenteditable","title":"contentEditable","text":"<p>\u2022 contentEditable: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.contentEditable</p>"},{"location":"reference/classes/VizzuPlayer/#dataset","title":"dataset","text":"<p>\u2022 <code>Readonly</code> dataset: <code>DOMStringMap</code></p> <p>Inherited from</p> <p>HTMLElement.dataset</p>"},{"location":"reference/classes/VizzuPlayer/#dir","title":"dir","text":"<p>\u2022 dir: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.dir</p>"},{"location":"reference/classes/VizzuPlayer/#draggable","title":"draggable","text":"<p>\u2022 draggable: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.draggable</p>"},{"location":"reference/classes/VizzuPlayer/#enterkeyhint","title":"enterKeyHint","text":"<p>\u2022 enterKeyHint: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.enterKeyHint</p>"},{"location":"reference/classes/VizzuPlayer/#firstchild","title":"firstChild","text":"<p>\u2022 <code>Readonly</code> firstChild: <code>ChildNode</code></p> <p>Returns the first child.</p> <p>Inherited from</p> <p>HTMLElement.firstChild</p>"},{"location":"reference/classes/VizzuPlayer/#firstelementchild","title":"firstElementChild","text":"<p>\u2022 <code>Readonly</code> firstElementChild: <code>Element</code></p> <p>Returns the first child that is an element, and null otherwise.</p> <p>Inherited from</p> <p>HTMLElement.firstElementChild</p>"},{"location":"reference/classes/VizzuPlayer/#hidden","title":"hidden","text":"<p>\u2022 hidden: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.hidden</p>"},{"location":"reference/classes/VizzuPlayer/#id","title":"id","text":"<p>\u2022 id: <code>string</code></p> <p>Returns the value of element's id content attribute. Can be set to change it.</p> <p>Inherited from</p> <p>HTMLElement.id</p>"},{"location":"reference/classes/VizzuPlayer/#inert","title":"inert","text":"<p>\u2022 inert: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.inert</p>"},{"location":"reference/classes/VizzuPlayer/#innerhtml","title":"innerHTML","text":"<p>\u2022 innerHTML: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.innerHTML</p>"},{"location":"reference/classes/VizzuPlayer/#innertext","title":"innerText","text":"<p>\u2022 innerText: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.innerText</p>"},{"location":"reference/classes/VizzuPlayer/#inputmode","title":"inputMode","text":"<p>\u2022 inputMode: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.inputMode</p>"},{"location":"reference/classes/VizzuPlayer/#isconnected","title":"isConnected","text":"<p>\u2022 <code>Readonly</code> isConnected: <code>boolean</code></p> <p>Returns true if node is connected and false otherwise.</p> <p>Inherited from</p> <p>HTMLElement.isConnected</p>"},{"location":"reference/classes/VizzuPlayer/#iscontenteditable","title":"isContentEditable","text":"<p>\u2022 <code>Readonly</code> isContentEditable: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.isContentEditable</p>"},{"location":"reference/classes/VizzuPlayer/#lang","title":"lang","text":"<p>\u2022 lang: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.lang</p>"},{"location":"reference/classes/VizzuPlayer/#lastchild","title":"lastChild","text":"<p>\u2022 <code>Readonly</code> lastChild: <code>ChildNode</code></p> <p>Returns the last child.</p> <p>Inherited from</p> <p>HTMLElement.lastChild</p>"},{"location":"reference/classes/VizzuPlayer/#lastelementchild","title":"lastElementChild","text":"<p>\u2022 <code>Readonly</code> lastElementChild: <code>Element</code></p> <p>Returns the last child that is an element, and null otherwise.</p> <p>Inherited from</p> <p>HTMLElement.lastElementChild</p>"},{"location":"reference/classes/VizzuPlayer/#localname","title":"localName","text":"<p>\u2022 <code>Readonly</code> localName: <code>string</code></p> <p>Returns the local name.</p> <p>Inherited from</p> <p>HTMLElement.localName</p>"},{"location":"reference/classes/VizzuPlayer/#namespaceuri","title":"namespaceURI","text":"<p>\u2022 <code>Readonly</code> namespaceURI: <code>string</code></p> <p>Returns the namespace.</p> <p>Inherited from</p> <p>HTMLElement.namespaceURI</p>"},{"location":"reference/classes/VizzuPlayer/#nextelementsibling","title":"nextElementSibling","text":"<p>\u2022 <code>Readonly</code> nextElementSibling: <code>Element</code></p> <p>Returns the first following sibling that is an element, and null otherwise.</p> <p>Inherited from</p> <p>HTMLElement.nextElementSibling</p>"},{"location":"reference/classes/VizzuPlayer/#nextsibling","title":"nextSibling","text":"<p>\u2022 <code>Readonly</code> nextSibling: <code>ChildNode</code></p> <p>Returns the next sibling.</p> <p>Inherited from</p> <p>HTMLElement.nextSibling</p>"},{"location":"reference/classes/VizzuPlayer/#nodename","title":"nodeName","text":"<p>\u2022 <code>Readonly</code> nodeName: <code>string</code></p> <p>Returns a string appropriate for the type of node.</p> <p>Inherited from</p> <p>HTMLElement.nodeName</p>"},{"location":"reference/classes/VizzuPlayer/#nodetype","title":"nodeType","text":"<p>\u2022 <code>Readonly</code> nodeType: <code>number</code></p> <p>Returns the type of node.</p> <p>Inherited from</p> <p>HTMLElement.nodeType</p>"},{"location":"reference/classes/VizzuPlayer/#nodevalue","title":"nodeValue","text":"<p>\u2022 nodeValue: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.nodeValue</p>"},{"location":"reference/classes/VizzuPlayer/#nonce","title":"nonce","text":"<p>\u2022 <code>Optional</code> nonce: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.nonce</p>"},{"location":"reference/classes/VizzuPlayer/#offsetheight","title":"offsetHeight","text":"<p>\u2022 <code>Readonly</code> offsetHeight: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.offsetHeight</p>"},{"location":"reference/classes/VizzuPlayer/#offsetleft","title":"offsetLeft","text":"<p>\u2022 <code>Readonly</code> offsetLeft: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.offsetLeft</p>"},{"location":"reference/classes/VizzuPlayer/#offsetparent","title":"offsetParent","text":"<p>\u2022 <code>Readonly</code> offsetParent: <code>Element</code></p> <p>Inherited from</p> <p>HTMLElement.offsetParent</p>"},{"location":"reference/classes/VizzuPlayer/#offsettop","title":"offsetTop","text":"<p>\u2022 <code>Readonly</code> offsetTop: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.offsetTop</p>"},{"location":"reference/classes/VizzuPlayer/#offsetwidth","title":"offsetWidth","text":"<p>\u2022 <code>Readonly</code> offsetWidth: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.offsetWidth</p>"},{"location":"reference/classes/VizzuPlayer/#onabort","title":"onabort","text":"<p>\u2022 onabort: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>UIEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user aborts the download.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>UIEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onabort</p>"},{"location":"reference/classes/VizzuPlayer/#onanimationcancel","title":"onanimationcancel","text":"<p>\u2022 onanimationcancel: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>AnimationEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>AnimationEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onanimationcancel</p>"},{"location":"reference/classes/VizzuPlayer/#onanimationend","title":"onanimationend","text":"<p>\u2022 onanimationend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>AnimationEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>AnimationEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onanimationend</p>"},{"location":"reference/classes/VizzuPlayer/#onanimationiteration","title":"onanimationiteration","text":"<p>\u2022 onanimationiteration: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>AnimationEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>AnimationEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onanimationiteration</p>"},{"location":"reference/classes/VizzuPlayer/#onanimationstart","title":"onanimationstart","text":"<p>\u2022 onanimationstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>AnimationEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>AnimationEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onanimationstart</p>"},{"location":"reference/classes/VizzuPlayer/#onauxclick","title":"onauxclick","text":"<p>\u2022 onauxclick: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>MouseEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onauxclick</p>"},{"location":"reference/classes/VizzuPlayer/#onbeforeinput","title":"onbeforeinput","text":"<p>\u2022 onbeforeinput: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>InputEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>InputEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onbeforeinput</p>"},{"location":"reference/classes/VizzuPlayer/#onblur","title":"onblur","text":"<p>\u2022 onblur: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>FocusEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the object loses the input focus.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>FocusEvent</code> The focus event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onblur</p>"},{"location":"reference/classes/VizzuPlayer/#oncancel","title":"oncancel","text":"<p>\u2022 oncancel: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncancel</p>"},{"location":"reference/classes/VizzuPlayer/#oncanplay","title":"oncanplay","text":"<p>\u2022 oncanplay: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when playback is possible, but would require further buffering.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncanplay</p>"},{"location":"reference/classes/VizzuPlayer/#oncanplaythrough","title":"oncanplaythrough","text":"<p>\u2022 oncanplaythrough: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncanplaythrough</p>"},{"location":"reference/classes/VizzuPlayer/#onchange","title":"onchange","text":"<p>\u2022 onchange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the contents of the object or selection have changed.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onchange</p>"},{"location":"reference/classes/VizzuPlayer/#onclick","title":"onclick","text":"<p>\u2022 onclick: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user clicks the left mouse button on the object</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onclick</p>"},{"location":"reference/classes/VizzuPlayer/#onclose","title":"onclose","text":"<p>\u2022 onclose: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onclose</p>"},{"location":"reference/classes/VizzuPlayer/#oncontextmenu","title":"oncontextmenu","text":"<p>\u2022 oncontextmenu: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user clicks the right mouse button in the client area, opening the context menu.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncontextmenu</p>"},{"location":"reference/classes/VizzuPlayer/#oncopy","title":"oncopy","text":"<p>\u2022 oncopy: (<code>this</code>: <code>DocumentAndElementEventHandlers</code>, <code>ev</code>: <code>ClipboardEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>DocumentAndElementEventHandlers</code> <code>ev</code> <code>ClipboardEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncopy</p>"},{"location":"reference/classes/VizzuPlayer/#oncuechange","title":"oncuechange","text":"<p>\u2022 oncuechange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncuechange</p>"},{"location":"reference/classes/VizzuPlayer/#oncut","title":"oncut","text":"<p>\u2022 oncut: (<code>this</code>: <code>DocumentAndElementEventHandlers</code>, <code>ev</code>: <code>ClipboardEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>DocumentAndElementEventHandlers</code> <code>ev</code> <code>ClipboardEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oncut</p>"},{"location":"reference/classes/VizzuPlayer/#ondblclick","title":"ondblclick","text":"<p>\u2022 ondblclick: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user double-clicks the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondblclick</p>"},{"location":"reference/classes/VizzuPlayer/#ondrag","title":"ondrag","text":"<p>\u2022 ondrag: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires on the source object continuously during a drag operation.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>DragEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondrag</p>"},{"location":"reference/classes/VizzuPlayer/#ondragend","title":"ondragend","text":"<p>\u2022 ondragend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires on the source object when the user releases the mouse at the close of a drag operation.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>DragEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondragend</p>"},{"location":"reference/classes/VizzuPlayer/#ondragenter","title":"ondragenter","text":"<p>\u2022 ondragenter: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires on the target element when the user drags the object to a valid drop target.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>DragEvent</code> The drag event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondragenter</p>"},{"location":"reference/classes/VizzuPlayer/#ondragleave","title":"ondragleave","text":"<p>\u2022 ondragleave: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires on the target object when the user moves the mouse out of a valid drop target during a drag operation.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>DragEvent</code> The drag event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondragleave</p>"},{"location":"reference/classes/VizzuPlayer/#ondragover","title":"ondragover","text":"<p>\u2022 ondragover: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires on the target element continuously while the user drags the object over a valid drop target.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>DragEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondragover</p>"},{"location":"reference/classes/VizzuPlayer/#ondragstart","title":"ondragstart","text":"<p>\u2022 ondragstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires on the source object when the user starts to drag a text selection or selected object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>DragEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondragstart</p>"},{"location":"reference/classes/VizzuPlayer/#ondrop","title":"ondrop","text":"<p>\u2022 ondrop: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>DragEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>DragEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondrop</p>"},{"location":"reference/classes/VizzuPlayer/#ondurationchange","title":"ondurationchange","text":"<p>\u2022 ondurationchange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the duration attribute is updated.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ondurationchange</p>"},{"location":"reference/classes/VizzuPlayer/#onemptied","title":"onemptied","text":"<p>\u2022 onemptied: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the media element is reset to its initial state.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onemptied</p>"},{"location":"reference/classes/VizzuPlayer/#onended","title":"onended","text":"<p>\u2022 onended: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the end of playback is reached.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onended</p>"},{"location":"reference/classes/VizzuPlayer/#onerror","title":"onerror","text":"<p>\u2022 onerror: <code>OnErrorEventHandlerNonNull</code></p> <p>Fires when an error occurs during object loading.</p> <p><code>Param</code></p> <p>The event.</p> <p>Inherited from</p> <p>HTMLElement.onerror</p>"},{"location":"reference/classes/VizzuPlayer/#onfocus","title":"onfocus","text":"<p>\u2022 onfocus: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>FocusEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the object receives focus.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>FocusEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onfocus</p>"},{"location":"reference/classes/VizzuPlayer/#onformdata","title":"onformdata","text":"<p>\u2022 onformdata: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>FormDataEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>FormDataEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onformdata</p>"},{"location":"reference/classes/VizzuPlayer/#onfullscreenchange","title":"onfullscreenchange","text":"<p>\u2022 onfullscreenchange: (<code>this</code>: <code>Element</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>Element</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onfullscreenchange</p>"},{"location":"reference/classes/VizzuPlayer/#onfullscreenerror","title":"onfullscreenerror","text":"<p>\u2022 onfullscreenerror: (<code>this</code>: <code>Element</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>Element</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onfullscreenerror</p>"},{"location":"reference/classes/VizzuPlayer/#ongotpointercapture","title":"ongotpointercapture","text":"<p>\u2022 ongotpointercapture: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ongotpointercapture</p>"},{"location":"reference/classes/VizzuPlayer/#oninput","title":"oninput","text":"<p>\u2022 oninput: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oninput</p>"},{"location":"reference/classes/VizzuPlayer/#oninvalid","title":"oninvalid","text":"<p>\u2022 oninvalid: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.oninvalid</p>"},{"location":"reference/classes/VizzuPlayer/#onkeydown","title":"onkeydown","text":"<p>\u2022 onkeydown: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>KeyboardEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user presses a key.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>KeyboardEvent</code> The keyboard event <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onkeydown</p>"},{"location":"reference/classes/VizzuPlayer/#onkeypress","title":"onkeypress","text":"<p>\u2022 onkeypress: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>KeyboardEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user presses an alphanumeric key.</p> <p><code>Deprecated</code></p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>KeyboardEvent</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onkeypress</p>"},{"location":"reference/classes/VizzuPlayer/#onkeyup","title":"onkeyup","text":"<p>\u2022 onkeyup: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>KeyboardEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user releases a key.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>KeyboardEvent</code> The keyboard event <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onkeyup</p>"},{"location":"reference/classes/VizzuPlayer/#onload","title":"onload","text":"<p>\u2022 onload: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires immediately after the browser loads the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onload</p>"},{"location":"reference/classes/VizzuPlayer/#onloadeddata","title":"onloadeddata","text":"<p>\u2022 onloadeddata: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when media data is loaded at the current playback position.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onloadeddata</p>"},{"location":"reference/classes/VizzuPlayer/#onloadedmetadata","title":"onloadedmetadata","text":"<p>\u2022 onloadedmetadata: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the duration and dimensions of the media have been determined.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onloadedmetadata</p>"},{"location":"reference/classes/VizzuPlayer/#onloadstart","title":"onloadstart","text":"<p>\u2022 onloadstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when Internet Explorer begins looking for media data.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onloadstart</p>"},{"location":"reference/classes/VizzuPlayer/#onlostpointercapture","title":"onlostpointercapture","text":"<p>\u2022 onlostpointercapture: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onlostpointercapture</p>"},{"location":"reference/classes/VizzuPlayer/#onmousedown","title":"onmousedown","text":"<p>\u2022 onmousedown: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user clicks the object with either mouse button.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmousedown</p>"},{"location":"reference/classes/VizzuPlayer/#onmouseenter","title":"onmouseenter","text":"<p>\u2022 onmouseenter: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>MouseEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmouseenter</p>"},{"location":"reference/classes/VizzuPlayer/#onmouseleave","title":"onmouseleave","text":"<p>\u2022 onmouseleave: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>MouseEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmouseleave</p>"},{"location":"reference/classes/VizzuPlayer/#onmousemove","title":"onmousemove","text":"<p>\u2022 onmousemove: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user moves the mouse over the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmousemove</p>"},{"location":"reference/classes/VizzuPlayer/#onmouseout","title":"onmouseout","text":"<p>\u2022 onmouseout: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user moves the mouse pointer outside the boundaries of the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmouseout</p>"},{"location":"reference/classes/VizzuPlayer/#onmouseover","title":"onmouseover","text":"<p>\u2022 onmouseover: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user moves the mouse pointer into the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmouseover</p>"},{"location":"reference/classes/VizzuPlayer/#onmouseup","title":"onmouseup","text":"<p>\u2022 onmouseup: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>MouseEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user releases a mouse button while the mouse is over the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>MouseEvent</code> The mouse event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onmouseup</p>"},{"location":"reference/classes/VizzuPlayer/#onpaste","title":"onpaste","text":"<p>\u2022 onpaste: (<code>this</code>: <code>DocumentAndElementEventHandlers</code>, <code>ev</code>: <code>ClipboardEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>DocumentAndElementEventHandlers</code> <code>ev</code> <code>ClipboardEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpaste</p>"},{"location":"reference/classes/VizzuPlayer/#onpause","title":"onpause","text":"<p>\u2022 onpause: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when playback is paused.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpause</p>"},{"location":"reference/classes/VizzuPlayer/#onplay","title":"onplay","text":"<p>\u2022 onplay: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the play method is requested.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onplay</p>"},{"location":"reference/classes/VizzuPlayer/#onplaying","title":"onplaying","text":"<p>\u2022 onplaying: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the audio or video has started playing.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onplaying</p>"},{"location":"reference/classes/VizzuPlayer/#onpointercancel","title":"onpointercancel","text":"<p>\u2022 onpointercancel: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointercancel</p>"},{"location":"reference/classes/VizzuPlayer/#onpointerdown","title":"onpointerdown","text":"<p>\u2022 onpointerdown: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointerdown</p>"},{"location":"reference/classes/VizzuPlayer/#onpointerenter","title":"onpointerenter","text":"<p>\u2022 onpointerenter: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointerenter</p>"},{"location":"reference/classes/VizzuPlayer/#onpointerleave","title":"onpointerleave","text":"<p>\u2022 onpointerleave: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointerleave</p>"},{"location":"reference/classes/VizzuPlayer/#onpointermove","title":"onpointermove","text":"<p>\u2022 onpointermove: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointermove</p>"},{"location":"reference/classes/VizzuPlayer/#onpointerout","title":"onpointerout","text":"<p>\u2022 onpointerout: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointerout</p>"},{"location":"reference/classes/VizzuPlayer/#onpointerover","title":"onpointerover","text":"<p>\u2022 onpointerover: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointerover</p>"},{"location":"reference/classes/VizzuPlayer/#onpointerup","title":"onpointerup","text":"<p>\u2022 onpointerup: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>PointerEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>PointerEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onpointerup</p>"},{"location":"reference/classes/VizzuPlayer/#onprogress","title":"onprogress","text":"<p>\u2022 onprogress: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>ProgressEvent</code>\\&lt;<code>EventTarget</code>&gt;) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs to indicate progress while downloading media data.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>ProgressEvent</code>\\&lt;<code>EventTarget</code>&gt; The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onprogress</p>"},{"location":"reference/classes/VizzuPlayer/#onratechange","title":"onratechange","text":"<p>\u2022 onratechange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the playback rate is increased or decreased.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onratechange</p>"},{"location":"reference/classes/VizzuPlayer/#onreset","title":"onreset","text":"<p>\u2022 onreset: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user resets a form.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onreset</p>"},{"location":"reference/classes/VizzuPlayer/#onresize","title":"onresize","text":"<p>\u2022 onresize: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>UIEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>UIEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onresize</p>"},{"location":"reference/classes/VizzuPlayer/#onscroll","title":"onscroll","text":"<p>\u2022 onscroll: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the user repositions the scroll box in the scroll bar on the object.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onscroll</p>"},{"location":"reference/classes/VizzuPlayer/#onsecuritypolicyviolation","title":"onsecuritypolicyviolation","text":"<p>\u2022 onsecuritypolicyviolation: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>SecurityPolicyViolationEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>SecurityPolicyViolationEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onsecuritypolicyviolation</p>"},{"location":"reference/classes/VizzuPlayer/#onseeked","title":"onseeked","text":"<p>\u2022 onseeked: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the seek operation ends.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onseeked</p>"},{"location":"reference/classes/VizzuPlayer/#onseeking","title":"onseeking","text":"<p>\u2022 onseeking: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the current playback position is moved.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onseeking</p>"},{"location":"reference/classes/VizzuPlayer/#onselect","title":"onselect","text":"<p>\u2022 onselect: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Fires when the current selection changes.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onselect</p>"},{"location":"reference/classes/VizzuPlayer/#onselectionchange","title":"onselectionchange","text":"<p>\u2022 onselectionchange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onselectionchange</p>"},{"location":"reference/classes/VizzuPlayer/#onselectstart","title":"onselectstart","text":"<p>\u2022 onselectstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onselectstart</p>"},{"location":"reference/classes/VizzuPlayer/#onslotchange","title":"onslotchange","text":"<p>\u2022 onslotchange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onslotchange</p>"},{"location":"reference/classes/VizzuPlayer/#onstalled","title":"onstalled","text":"<p>\u2022 onstalled: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the download has stopped.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onstalled</p>"},{"location":"reference/classes/VizzuPlayer/#onsubmit","title":"onsubmit","text":"<p>\u2022 onsubmit: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>SubmitEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>SubmitEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onsubmit</p>"},{"location":"reference/classes/VizzuPlayer/#onsuspend","title":"onsuspend","text":"<p>\u2022 onsuspend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs if the load operation has been intentionally halted.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onsuspend</p>"},{"location":"reference/classes/VizzuPlayer/#ontimeupdate","title":"ontimeupdate","text":"<p>\u2022 ontimeupdate: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs to indicate the current playback position.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontimeupdate</p>"},{"location":"reference/classes/VizzuPlayer/#ontoggle","title":"ontoggle","text":"<p>\u2022 ontoggle: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontoggle</p>"},{"location":"reference/classes/VizzuPlayer/#ontouchcancel","title":"ontouchcancel","text":"<p>\u2022 <code>Optional</code> ontouchcancel: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TouchEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TouchEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontouchcancel</p>"},{"location":"reference/classes/VizzuPlayer/#ontouchend","title":"ontouchend","text":"<p>\u2022 <code>Optional</code> ontouchend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TouchEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TouchEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontouchend</p>"},{"location":"reference/classes/VizzuPlayer/#ontouchmove","title":"ontouchmove","text":"<p>\u2022 <code>Optional</code> ontouchmove: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TouchEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TouchEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontouchmove</p>"},{"location":"reference/classes/VizzuPlayer/#ontouchstart","title":"ontouchstart","text":"<p>\u2022 <code>Optional</code> ontouchstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TouchEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TouchEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontouchstart</p>"},{"location":"reference/classes/VizzuPlayer/#ontransitioncancel","title":"ontransitioncancel","text":"<p>\u2022 ontransitioncancel: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TransitionEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TransitionEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontransitioncancel</p>"},{"location":"reference/classes/VizzuPlayer/#ontransitionend","title":"ontransitionend","text":"<p>\u2022 ontransitionend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TransitionEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TransitionEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontransitionend</p>"},{"location":"reference/classes/VizzuPlayer/#ontransitionrun","title":"ontransitionrun","text":"<p>\u2022 ontransitionrun: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TransitionEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TransitionEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontransitionrun</p>"},{"location":"reference/classes/VizzuPlayer/#ontransitionstart","title":"ontransitionstart","text":"<p>\u2022 ontransitionstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>TransitionEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>TransitionEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.ontransitionstart</p>"},{"location":"reference/classes/VizzuPlayer/#onvolumechange","title":"onvolumechange","text":"<p>\u2022 onvolumechange: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when the volume is changed, or playback is muted or unmuted.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onvolumechange</p>"},{"location":"reference/classes/VizzuPlayer/#onwaiting","title":"onwaiting","text":"<p>\u2022 onwaiting: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Occurs when playback stops because the next frame of a video resource is not available.</p> <p>Parameters</p> Name Type Description <code>this</code> <code>GlobalEventHandlers</code> - <code>ev</code> <code>Event</code> The event. <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onwaiting</p>"},{"location":"reference/classes/VizzuPlayer/#onwebkitanimationend","title":"onwebkitanimationend","text":"<p>\u2022 onwebkitanimationend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p><code>Deprecated</code></p> <p>This is a legacy alias of <code>onanimationend</code>.</p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onwebkitanimationend</p>"},{"location":"reference/classes/VizzuPlayer/#onwebkitanimationiteration","title":"onwebkitanimationiteration","text":"<p>\u2022 onwebkitanimationiteration: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p><code>Deprecated</code></p> <p>This is a legacy alias of <code>onanimationiteration</code>.</p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onwebkitanimationiteration</p>"},{"location":"reference/classes/VizzuPlayer/#onwebkitanimationstart","title":"onwebkitanimationstart","text":"<p>\u2022 onwebkitanimationstart: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p><code>Deprecated</code></p> <p>This is a legacy alias of <code>onanimationstart</code>.</p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onwebkitanimationstart</p>"},{"location":"reference/classes/VizzuPlayer/#onwebkittransitionend","title":"onwebkittransitionend","text":"<p>\u2022 onwebkittransitionend: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>Event</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p><code>Deprecated</code></p> <p>This is a legacy alias of <code>ontransitionend</code>.</p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>Event</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onwebkittransitionend</p>"},{"location":"reference/classes/VizzuPlayer/#onwheel","title":"onwheel","text":"<p>\u2022 onwheel: (<code>this</code>: <code>GlobalEventHandlers</code>, <code>ev</code>: <code>WheelEvent</code>) =&gt; <code>any</code></p> <p>Type declaration</p> <p>\u25b8 (<code>this</code>, <code>ev</code>): <code>any</code></p> <p>Parameters</p> Name Type <code>this</code> <code>GlobalEventHandlers</code> <code>ev</code> <code>WheelEvent</code> <p>Returns</p> <p><code>any</code></p> <p>Inherited from</p> <p>HTMLElement.onwheel</p>"},{"location":"reference/classes/VizzuPlayer/#outerhtml","title":"outerHTML","text":"<p>\u2022 outerHTML: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.outerHTML</p>"},{"location":"reference/classes/VizzuPlayer/#outertext","title":"outerText","text":"<p>\u2022 outerText: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.outerText</p>"},{"location":"reference/classes/VizzuPlayer/#ownerdocument","title":"ownerDocument","text":"<p>\u2022 <code>Readonly</code> ownerDocument: <code>Document</code></p> <p>Inherited from</p> <p>HTMLElement.ownerDocument</p>"},{"location":"reference/classes/VizzuPlayer/#parentelement","title":"parentElement","text":"<p>\u2022 <code>Readonly</code> parentElement: <code>HTMLElement</code></p> <p>Returns the parent element.</p> <p>Inherited from</p> <p>HTMLElement.parentElement</p>"},{"location":"reference/classes/VizzuPlayer/#parentnode","title":"parentNode","text":"<p>\u2022 <code>Readonly</code> parentNode: <code>ParentNode</code></p> <p>Returns the parent.</p> <p>Inherited from</p> <p>HTMLElement.parentNode</p>"},{"location":"reference/classes/VizzuPlayer/#part","title":"part","text":"<p>\u2022 <code>Readonly</code> part: <code>DOMTokenList</code></p> <p>Inherited from</p> <p>HTMLElement.part</p>"},{"location":"reference/classes/VizzuPlayer/#prefix","title":"prefix","text":"<p>\u2022 <code>Readonly</code> prefix: <code>string</code></p> <p>Returns the namespace prefix.</p> <p>Inherited from</p> <p>HTMLElement.prefix</p>"},{"location":"reference/classes/VizzuPlayer/#previouselementsibling","title":"previousElementSibling","text":"<p>\u2022 <code>Readonly</code> previousElementSibling: <code>Element</code></p> <p>Returns the first preceding sibling that is an element, and null otherwise.</p> <p>Inherited from</p> <p>HTMLElement.previousElementSibling</p>"},{"location":"reference/classes/VizzuPlayer/#previoussibling","title":"previousSibling","text":"<p>\u2022 <code>Readonly</code> previousSibling: <code>ChildNode</code></p> <p>Returns the previous sibling.</p> <p>Inherited from</p> <p>HTMLElement.previousSibling</p>"},{"location":"reference/classes/VizzuPlayer/#role","title":"role","text":"<p>\u2022 role: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.role</p>"},{"location":"reference/classes/VizzuPlayer/#scrollheight","title":"scrollHeight","text":"<p>\u2022 <code>Readonly</code> scrollHeight: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.scrollHeight</p>"},{"location":"reference/classes/VizzuPlayer/#scrollleft","title":"scrollLeft","text":"<p>\u2022 scrollLeft: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.scrollLeft</p>"},{"location":"reference/classes/VizzuPlayer/#scrolltop","title":"scrollTop","text":"<p>\u2022 scrollTop: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.scrollTop</p>"},{"location":"reference/classes/VizzuPlayer/#scrollwidth","title":"scrollWidth","text":"<p>\u2022 <code>Readonly</code> scrollWidth: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.scrollWidth</p>"},{"location":"reference/classes/VizzuPlayer/#shadowroot","title":"shadowRoot","text":"<p>\u2022 <code>Readonly</code> shadowRoot: <code>ShadowRoot</code></p> <p>Returns element's shadow root, if any, and if shadow root's mode is \"open\", and null otherwise.</p> <p>Inherited from</p> <p>HTMLElement.shadowRoot</p>"},{"location":"reference/classes/VizzuPlayer/#slot","title":"slot","text":"<p>\u2022 slot: <code>string</code></p> <p>Returns the value of element's slot content attribute. Can be set to change it.</p> <p>Inherited from</p> <p>HTMLElement.slot</p>"},{"location":"reference/classes/VizzuPlayer/#spellcheck","title":"spellcheck","text":"<p>\u2022 spellcheck: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.spellcheck</p>"},{"location":"reference/classes/VizzuPlayer/#style","title":"style","text":"<p>\u2022 <code>Readonly</code> style: <code>CSSStyleDeclaration</code></p> <p>Inherited from</p> <p>HTMLElement.style</p>"},{"location":"reference/classes/VizzuPlayer/#tabindex","title":"tabIndex","text":"<p>\u2022 tabIndex: <code>number</code></p> <p>Inherited from</p> <p>HTMLElement.tabIndex</p>"},{"location":"reference/classes/VizzuPlayer/#tagname","title":"tagName","text":"<p>\u2022 <code>Readonly</code> tagName: <code>string</code></p> <p>Returns the HTML-uppercased qualified name.</p> <p>Inherited from</p> <p>HTMLElement.tagName</p>"},{"location":"reference/classes/VizzuPlayer/#textcontent","title":"textContent","text":"<p>\u2022 textContent: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.textContent</p>"},{"location":"reference/classes/VizzuPlayer/#title","title":"title","text":"<p>\u2022 title: <code>string</code></p> <p>Inherited from</p> <p>HTMLElement.title</p>"},{"location":"reference/classes/VizzuPlayer/#translate","title":"translate","text":"<p>\u2022 translate: <code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.translate</p>"},{"location":"reference/classes/VizzuPlayer/#accessors","title":"Accessors","text":""},{"location":"reference/classes/VizzuPlayer/#slides","title":"slides","text":"<p>\u2022 <code>set</code> slides(<code>slides</code>): <code>void</code></p> <p>Setter for story object.</p> <p>Parameters</p> Name Type <code>slides</code> <code>Story</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/classes/VizzuPlayer/#methods","title":"Methods","text":""},{"location":"reference/classes/VizzuPlayer/#addeventlistener","title":"addEventListener","text":"<p>\u25b8 addEventListener\\&lt;<code>K</code>&gt;(<code>type</code>, <code>listener</code>, <code>options?</code>): <code>void</code></p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>HTMLElementEventMap</code> <p>Parameters</p> Name Type <code>type</code> <code>K</code> <code>listener</code> (<code>this</code>: <code>HTMLElement</code>, <code>ev</code>: <code>HTMLElementEventMap</code>[<code>K</code>]) =&gt; <code>any</code> <code>options?</code> <code>boolean</code> | <code>AddEventListenerOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.addEventListener</p> <p>\u25b8 addEventListener(<code>type</code>, <code>listener</code>, <code>options?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>type</code> <code>string</code> <code>listener</code> <code>EventListenerOrEventListenerObject</code> <code>options?</code> <code>boolean</code> | <code>AddEventListenerOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.addEventListener</p>"},{"location":"reference/classes/VizzuPlayer/#after","title":"after","text":"<p>\u25b8 after(<code>...nodes</code>): <code>void</code></p> <p>Inserts nodes just after node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>Parameters</p> Name Type <code>...nodes</code> (<code>string</code> | <code>Node</code>)[] <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.after</p>"},{"location":"reference/classes/VizzuPlayer/#animate","title":"animate","text":"<p>\u25b8 animate(<code>keyframes</code>, <code>options?</code>): <code>Animation</code></p> <p>Parameters</p> Name Type <code>keyframes</code> <code>PropertyIndexedKeyframes</code> | <code>Keyframe</code>[] <code>options?</code> <code>number</code> | <code>KeyframeAnimationOptions</code> <p>Returns</p> <p><code>Animation</code></p> <p>Inherited from</p> <p>HTMLElement.animate</p>"},{"location":"reference/classes/VizzuPlayer/#append","title":"append","text":"<p>\u25b8 append(<code>...nodes</code>): <code>void</code></p> <p>Inserts nodes after the last child of node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>Parameters</p> Name Type <code>...nodes</code> (<code>string</code> | <code>Node</code>)[] <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.append</p>"},{"location":"reference/classes/VizzuPlayer/#appendchild","title":"appendChild","text":"<p>\u25b8 appendChild\\&lt;<code>T</code>&gt;(<code>node</code>): <code>T</code></p> <p>Type parameters</p> Name Type <code>T</code> extends <code>Node</code>\\&lt;<code>T</code>&gt; <p>Parameters</p> Name Type <code>node</code> <code>T</code> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p>HTMLElement.appendChild</p>"},{"location":"reference/classes/VizzuPlayer/#attachinternals","title":"attachInternals","text":"<p>\u25b8 attachInternals(): <code>ElementInternals</code></p> <p>Returns</p> <p><code>ElementInternals</code></p> <p>Inherited from</p> <p>HTMLElement.attachInternals</p>"},{"location":"reference/classes/VizzuPlayer/#attachshadow","title":"attachShadow","text":"<p>\u25b8 attachShadow(<code>init</code>): <code>ShadowRoot</code></p> <p>Creates a shadow root for element and returns it.</p> <p>Parameters</p> Name Type <code>init</code> <code>ShadowRootInit</code> <p>Returns</p> <p><code>ShadowRoot</code></p> <p>Inherited from</p> <p>HTMLElement.attachShadow</p>"},{"location":"reference/classes/VizzuPlayer/#before","title":"before","text":"<p>\u25b8 before(<code>...nodes</code>): <code>void</code></p> <p>Inserts nodes just before node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>Parameters</p> Name Type <code>...nodes</code> (<code>string</code> | <code>Node</code>)[] <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.before</p>"},{"location":"reference/classes/VizzuPlayer/#blur","title":"blur","text":"<p>\u25b8 blur(): <code>void</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.blur</p>"},{"location":"reference/classes/VizzuPlayer/#click","title":"click","text":"<p>\u25b8 click(): <code>void</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.click</p>"},{"location":"reference/classes/VizzuPlayer/#clonenode","title":"cloneNode","text":"<p>\u25b8 cloneNode(<code>deep?</code>): <code>Node</code></p> <p>Returns a copy of node. If deep is true, the copy also includes the node's descendants.</p> <p>Parameters</p> Name Type <code>deep?</code> <code>boolean</code> <p>Returns</p> <p><code>Node</code></p> <p>Inherited from</p> <p>HTMLElement.cloneNode</p>"},{"location":"reference/classes/VizzuPlayer/#closest","title":"closest","text":"<p>\u25b8 closest\\&lt;<code>K</code>&gt;(<code>selector</code>): <code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Returns the first (starting at element) inclusive ancestor that matches selectors, and null otherwise.</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>HTMLElementTagNameMap</code> <p>Parameters</p> Name Type <code>selector</code> <code>K</code> <p>Returns</p> <p><code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p>HTMLElement.closest</p> <p>\u25b8 closest\\&lt;<code>K</code>&gt;(<code>selector</code>): <code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>SVGElementTagNameMap</code> <p>Parameters</p> Name Type <code>selector</code> <code>K</code> <p>Returns</p> <p><code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p>HTMLElement.closest</p> <p>\u25b8 closest\\&lt;<code>E</code>&gt;(<code>selectors</code>): <code>E</code></p> <p>Type parameters</p> Name Type <code>E</code> extends <code>Element</code>\\&lt;<code>E</code>&gt; = <code>Element</code> <p>Parameters</p> Name Type <code>selectors</code> <code>string</code> <p>Returns</p> <p><code>E</code></p> <p>Inherited from</p> <p>HTMLElement.closest</p>"},{"location":"reference/classes/VizzuPlayer/#comparedocumentposition","title":"compareDocumentPosition","text":"<p>\u25b8 compareDocumentPosition(<code>other</code>): <code>number</code></p> <p>Returns a bitmask indicating the position of other relative to node.</p> <p>Parameters</p> Name Type <code>other</code> <code>Node</code> <p>Returns</p> <p><code>number</code></p> <p>Inherited from</p> <p>HTMLElement.compareDocumentPosition</p>"},{"location":"reference/classes/VizzuPlayer/#contains","title":"contains","text":"<p>\u25b8 contains(<code>other</code>): <code>boolean</code></p> <p>Returns true if other is an inclusive descendant of node, and false otherwise.</p> <p>Parameters</p> Name Type <code>other</code> <code>Node</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.contains</p>"},{"location":"reference/classes/VizzuPlayer/#dispatchevent","title":"dispatchEvent","text":"<p>\u25b8 dispatchEvent(<code>event</code>): <code>boolean</code></p> <p>Dispatches a synthetic event event to target and returns true if either event's cancelable attribute value is false or its preventDefault() method was not invoked, and false otherwise.</p> <p>Parameters</p> Name Type <code>event</code> <code>Event</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.dispatchEvent</p>"},{"location":"reference/classes/VizzuPlayer/#focus","title":"focus","text":"<p>\u25b8 focus(<code>options?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>options?</code> <code>FocusOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.focus</p>"},{"location":"reference/classes/VizzuPlayer/#getanimations","title":"getAnimations","text":"<p>\u25b8 getAnimations(<code>options?</code>): <code>Animation</code>[]</p> <p>Parameters</p> Name Type <code>options?</code> <code>GetAnimationsOptions</code> <p>Returns</p> <p><code>Animation</code>[]</p> <p>Inherited from</p> <p>HTMLElement.getAnimations</p>"},{"location":"reference/classes/VizzuPlayer/#getattribute","title":"getAttribute","text":"<p>\u25b8 getAttribute(<code>qualifiedName</code>): <code>string</code></p> <p>Returns element's first attribute whose qualified name is qualifiedName, and null if there is no such attribute otherwise.</p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p>HTMLElement.getAttribute</p>"},{"location":"reference/classes/VizzuPlayer/#getattributens","title":"getAttributeNS","text":"<p>\u25b8 getAttributeNS(<code>namespace</code>, <code>localName</code>): <code>string</code></p> <p>Returns element's attribute whose namespace is namespace and local name is localName, and null if there is no such attribute otherwise.</p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p>HTMLElement.getAttributeNS</p>"},{"location":"reference/classes/VizzuPlayer/#getattributenames","title":"getAttributeNames","text":"<p>\u25b8 getAttributeNames(): <code>string</code>[]</p> <p>Returns the qualified names of all element's attributes. Can contain duplicates.</p> <p>Returns</p> <p><code>string</code>[]</p> <p>Inherited from</p> <p>HTMLElement.getAttributeNames</p>"},{"location":"reference/classes/VizzuPlayer/#getattributenode","title":"getAttributeNode","text":"<p>\u25b8 getAttributeNode(<code>qualifiedName</code>): <code>Attr</code></p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p>HTMLElement.getAttributeNode</p>"},{"location":"reference/classes/VizzuPlayer/#getattributenodens","title":"getAttributeNodeNS","text":"<p>\u25b8 getAttributeNodeNS(<code>namespace</code>, <code>localName</code>): <code>Attr</code></p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p>HTMLElement.getAttributeNodeNS</p>"},{"location":"reference/classes/VizzuPlayer/#getboundingclientrect","title":"getBoundingClientRect","text":"<p>\u25b8 getBoundingClientRect(): <code>DOMRect</code></p> <p>Returns</p> <p><code>DOMRect</code></p> <p>Inherited from</p> <p>HTMLElement.getBoundingClientRect</p>"},{"location":"reference/classes/VizzuPlayer/#getclientrects","title":"getClientRects","text":"<p>\u25b8 getClientRects(): <code>DOMRectList</code></p> <p>Returns</p> <p><code>DOMRectList</code></p> <p>Inherited from</p> <p>HTMLElement.getClientRects</p>"},{"location":"reference/classes/VizzuPlayer/#getelementsbyclassname","title":"getElementsByClassName","text":"<p>\u25b8 getElementsByClassName(<code>classNames</code>): <code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Returns a HTMLCollection of the elements in the object on which the method was invoked (a document or an element) that have all the classes given by classNames. The classNames argument is interpreted as a space-separated list of classes.</p> <p>Parameters</p> Name Type <code>classNames</code> <code>string</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByClassName</p>"},{"location":"reference/classes/VizzuPlayer/#getelementsbytagname","title":"getElementsByTagName","text":"<p>\u25b8 getElementsByTagName\\&lt;<code>K</code>&gt;(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>HTMLElementTagNameMap</code> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>K</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByTagName</p> <p>\u25b8 getElementsByTagName\\&lt;<code>K</code>&gt;(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>SVGElementTagNameMap</code> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>K</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByTagName</p> <p>\u25b8 getElementsByTagName(<code>qualifiedName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByTagName</p>"},{"location":"reference/classes/VizzuPlayer/#getelementsbytagnamens","title":"getElementsByTagNameNS","text":"<p>\u25b8 getElementsByTagNameNS(<code>namespaceURI</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>HTMLElement</code>&gt;</p> <p>Parameters</p> Name Type <code>namespaceURI</code> <code>\"http://www.w3.org/1999/xhtml\"</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>HTMLElement</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByTagNameNS</p> <p>\u25b8 getElementsByTagNameNS(<code>namespaceURI</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>SVGElement</code>&gt;</p> <p>Parameters</p> Name Type <code>namespaceURI</code> <code>\"http://www.w3.org/2000/svg\"</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>SVGElement</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByTagNameNS</p> <p>\u25b8 getElementsByTagNameNS(<code>namespace</code>, <code>localName</code>): <code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>HTMLCollectionOf</code>\\&lt;<code>Element</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.getElementsByTagNameNS</p>"},{"location":"reference/classes/VizzuPlayer/#getrootnode","title":"getRootNode","text":"<p>\u25b8 getRootNode(<code>options?</code>): <code>Node</code></p> <p>Returns node's root.</p> <p>Parameters</p> Name Type <code>options?</code> <code>GetRootNodeOptions</code> <p>Returns</p> <p><code>Node</code></p> <p>Inherited from</p> <p>HTMLElement.getRootNode</p>"},{"location":"reference/classes/VizzuPlayer/#hasattribute","title":"hasAttribute","text":"<p>\u25b8 hasAttribute(<code>qualifiedName</code>): <code>boolean</code></p> <p>Returns true if element has an attribute whose qualified name is qualifiedName, and false otherwise.</p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.hasAttribute</p>"},{"location":"reference/classes/VizzuPlayer/#hasattributens","title":"hasAttributeNS","text":"<p>\u25b8 hasAttributeNS(<code>namespace</code>, <code>localName</code>): <code>boolean</code></p> <p>Returns true if element has an attribute whose namespace is namespace and local name is localName.</p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.hasAttributeNS</p>"},{"location":"reference/classes/VizzuPlayer/#hasattributes","title":"hasAttributes","text":"<p>\u25b8 hasAttributes(): <code>boolean</code></p> <p>Returns true if element has attributes, and false otherwise.</p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.hasAttributes</p>"},{"location":"reference/classes/VizzuPlayer/#haschildnodes","title":"hasChildNodes","text":"<p>\u25b8 hasChildNodes(): <code>boolean</code></p> <p>Returns whether node has children.</p> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.hasChildNodes</p>"},{"location":"reference/classes/VizzuPlayer/#haspointercapture","title":"hasPointerCapture","text":"<p>\u25b8 hasPointerCapture(<code>pointerId</code>): <code>boolean</code></p> <p>Parameters</p> Name Type <code>pointerId</code> <code>number</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.hasPointerCapture</p>"},{"location":"reference/classes/VizzuPlayer/#insertadjacentelement","title":"insertAdjacentElement","text":"<p>\u25b8 insertAdjacentElement(<code>where</code>, <code>element</code>): <code>Element</code></p> <p>Parameters</p> Name Type <code>where</code> <code>InsertPosition</code> <code>element</code> <code>Element</code> <p>Returns</p> <p><code>Element</code></p> <p>Inherited from</p> <p>HTMLElement.insertAdjacentElement</p>"},{"location":"reference/classes/VizzuPlayer/#insertadjacenthtml","title":"insertAdjacentHTML","text":"<p>\u25b8 insertAdjacentHTML(<code>position</code>, <code>text</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>position</code> <code>InsertPosition</code> <code>text</code> <code>string</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.insertAdjacentHTML</p>"},{"location":"reference/classes/VizzuPlayer/#insertadjacenttext","title":"insertAdjacentText","text":"<p>\u25b8 insertAdjacentText(<code>where</code>, <code>data</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>where</code> <code>InsertPosition</code> <code>data</code> <code>string</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.insertAdjacentText</p>"},{"location":"reference/classes/VizzuPlayer/#insertbefore","title":"insertBefore","text":"<p>\u25b8 insertBefore\\&lt;<code>T</code>&gt;(<code>node</code>, <code>child</code>): <code>T</code></p> <p>Type parameters</p> Name Type <code>T</code> extends <code>Node</code>\\&lt;<code>T</code>&gt; <p>Parameters</p> Name Type <code>node</code> <code>T</code> <code>child</code> <code>Node</code> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p>HTMLElement.insertBefore</p>"},{"location":"reference/classes/VizzuPlayer/#isdefaultnamespace","title":"isDefaultNamespace","text":"<p>\u25b8 isDefaultNamespace(<code>namespace</code>): <code>boolean</code></p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.isDefaultNamespace</p>"},{"location":"reference/classes/VizzuPlayer/#isequalnode","title":"isEqualNode","text":"<p>\u25b8 isEqualNode(<code>otherNode</code>): <code>boolean</code></p> <p>Returns whether node and otherNode have the same properties.</p> <p>Parameters</p> Name Type <code>otherNode</code> <code>Node</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.isEqualNode</p>"},{"location":"reference/classes/VizzuPlayer/#issamenode","title":"isSameNode","text":"<p>\u25b8 isSameNode(<code>otherNode</code>): <code>boolean</code></p> <p>Parameters</p> Name Type <code>otherNode</code> <code>Node</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.isSameNode</p>"},{"location":"reference/classes/VizzuPlayer/#lookupnamespaceuri","title":"lookupNamespaceURI","text":"<p>\u25b8 lookupNamespaceURI(<code>prefix</code>): <code>string</code></p> <p>Parameters</p> Name Type <code>prefix</code> <code>string</code> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p>HTMLElement.lookupNamespaceURI</p>"},{"location":"reference/classes/VizzuPlayer/#lookupprefix","title":"lookupPrefix","text":"<p>\u25b8 lookupPrefix(<code>namespace</code>): <code>string</code></p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <p>Returns</p> <p><code>string</code></p> <p>Inherited from</p> <p>HTMLElement.lookupPrefix</p>"},{"location":"reference/classes/VizzuPlayer/#matches","title":"matches","text":"<p>\u25b8 matches(<code>selectors</code>): <code>boolean</code></p> <p>Returns true if matching selectors against element's root yields element, and false otherwise.</p> <p>Parameters</p> Name Type <code>selectors</code> <code>string</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.matches</p>"},{"location":"reference/classes/VizzuPlayer/#normalize","title":"normalize","text":"<p>\u25b8 normalize(): <code>void</code></p> <p>Removes empty exclusive Text nodes and concatenates the data of remaining contiguous exclusive Text nodes into the first of their nodes.</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.normalize</p>"},{"location":"reference/classes/VizzuPlayer/#prepend","title":"prepend","text":"<p>\u25b8 prepend(<code>...nodes</code>): <code>void</code></p> <p>Inserts nodes before the first child of node, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>Parameters</p> Name Type <code>...nodes</code> (<code>string</code> | <code>Node</code>)[] <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.prepend</p>"},{"location":"reference/classes/VizzuPlayer/#queryselector","title":"querySelector","text":"<p>\u25b8 querySelector\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Returns the first element that is a descendant of node that matches selectors.</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>HTMLElementTagNameMap</code> <p>Parameters</p> Name Type <code>selectors</code> <code>K</code> <p>Returns</p> <p><code>HTMLElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p>HTMLElement.querySelector</p> <p>\u25b8 querySelector\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>SVGElementTagNameMap</code> <p>Parameters</p> Name Type <code>selectors</code> <code>K</code> <p>Returns</p> <p><code>SVGElementTagNameMap</code>[<code>K</code>]</p> <p>Inherited from</p> <p>HTMLElement.querySelector</p> <p>\u25b8 querySelector\\&lt;<code>E</code>&gt;(<code>selectors</code>): <code>E</code></p> <p>Type parameters</p> Name Type <code>E</code> extends <code>Element</code>\\&lt;<code>E</code>&gt; = <code>Element</code> <p>Parameters</p> Name Type <code>selectors</code> <code>string</code> <p>Returns</p> <p><code>E</code></p> <p>Inherited from</p> <p>HTMLElement.querySelector</p>"},{"location":"reference/classes/VizzuPlayer/#queryselectorall","title":"querySelectorAll","text":"<p>\u25b8 querySelectorAll\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Returns all element descendants of node that match selectors.</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>HTMLElementTagNameMap</code> <p>Parameters</p> Name Type <code>selectors</code> <code>K</code> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>HTMLElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p>HTMLElement.querySelectorAll</p> <p>\u25b8 querySelectorAll\\&lt;<code>K</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>SVGElementTagNameMap</code> <p>Parameters</p> Name Type <code>selectors</code> <code>K</code> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>SVGElementTagNameMap</code>[<code>K</code>]&gt;</p> <p>Inherited from</p> <p>HTMLElement.querySelectorAll</p> <p>\u25b8 querySelectorAll\\&lt;<code>E</code>&gt;(<code>selectors</code>): <code>NodeListOf</code>\\&lt;<code>E</code>&gt;</p> <p>Type parameters</p> Name Type <code>E</code> extends <code>Element</code>\\&lt;<code>E</code>&gt; = <code>Element</code> <p>Parameters</p> Name Type <code>selectors</code> <code>string</code> <p>Returns</p> <p><code>NodeListOf</code>\\&lt;<code>E</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.querySelectorAll</p>"},{"location":"reference/classes/VizzuPlayer/#releasepointercapture","title":"releasePointerCapture","text":"<p>\u25b8 releasePointerCapture(<code>pointerId</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>pointerId</code> <code>number</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.releasePointerCapture</p>"},{"location":"reference/classes/VizzuPlayer/#remove","title":"remove","text":"<p>\u25b8 remove(): <code>void</code></p> <p>Removes node.</p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.remove</p>"},{"location":"reference/classes/VizzuPlayer/#removeattribute","title":"removeAttribute","text":"<p>\u25b8 removeAttribute(<code>qualifiedName</code>): <code>void</code></p> <p>Removes element's first attribute whose qualified name is qualifiedName.</p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.removeAttribute</p>"},{"location":"reference/classes/VizzuPlayer/#removeattributens","title":"removeAttributeNS","text":"<p>\u25b8 removeAttributeNS(<code>namespace</code>, <code>localName</code>): <code>void</code></p> <p>Removes element's attribute whose namespace is namespace and local name is localName.</p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <code>localName</code> <code>string</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.removeAttributeNS</p>"},{"location":"reference/classes/VizzuPlayer/#removeattributenode","title":"removeAttributeNode","text":"<p>\u25b8 removeAttributeNode(<code>attr</code>): <code>Attr</code></p> <p>Parameters</p> Name Type <code>attr</code> <code>Attr</code> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p>HTMLElement.removeAttributeNode</p>"},{"location":"reference/classes/VizzuPlayer/#removechild","title":"removeChild","text":"<p>\u25b8 removeChild\\&lt;<code>T</code>&gt;(<code>child</code>): <code>T</code></p> <p>Type parameters</p> Name Type <code>T</code> extends <code>Node</code>\\&lt;<code>T</code>&gt; <p>Parameters</p> Name Type <code>child</code> <code>T</code> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p>HTMLElement.removeChild</p>"},{"location":"reference/classes/VizzuPlayer/#removeeventlistener","title":"removeEventListener","text":"<p>\u25b8 removeEventListener\\&lt;<code>K</code>&gt;(<code>type</code>, <code>listener</code>, <code>options?</code>): <code>void</code></p> <p>Type parameters</p> Name Type <code>K</code> extends keyof <code>HTMLElementEventMap</code> <p>Parameters</p> Name Type <code>type</code> <code>K</code> <code>listener</code> (<code>this</code>: <code>HTMLElement</code>, <code>ev</code>: <code>HTMLElementEventMap</code>[<code>K</code>]) =&gt; <code>any</code> <code>options?</code> <code>boolean</code> | <code>EventListenerOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.removeEventListener</p> <p>\u25b8 removeEventListener(<code>type</code>, <code>listener</code>, <code>options?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>type</code> <code>string</code> <code>listener</code> <code>EventListenerOrEventListenerObject</code> <code>options?</code> <code>boolean</code> | <code>EventListenerOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.removeEventListener</p>"},{"location":"reference/classes/VizzuPlayer/#replacechild","title":"replaceChild","text":"<p>\u25b8 replaceChild\\&lt;<code>T</code>&gt;(<code>node</code>, <code>child</code>): <code>T</code></p> <p>Type parameters</p> Name Type <code>T</code> extends <code>Node</code>\\&lt;<code>T</code>&gt; <p>Parameters</p> Name Type <code>node</code> <code>Node</code> <code>child</code> <code>T</code> <p>Returns</p> <p><code>T</code></p> <p>Inherited from</p> <p>HTMLElement.replaceChild</p>"},{"location":"reference/classes/VizzuPlayer/#replacechildren","title":"replaceChildren","text":"<p>\u25b8 replaceChildren(<code>...nodes</code>): <code>void</code></p> <p>Replace all children of node with nodes, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>Parameters</p> Name Type <code>...nodes</code> (<code>string</code> | <code>Node</code>)[] <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.replaceChildren</p>"},{"location":"reference/classes/VizzuPlayer/#replacewith","title":"replaceWith","text":"<p>\u25b8 replaceWith(<code>...nodes</code>): <code>void</code></p> <p>Replaces node with nodes, while replacing strings in nodes with equivalent Text nodes.</p> <p>Throws a \"HierarchyRequestError\" DOMException if the constraints of the node tree are violated.</p> <p>Parameters</p> Name Type <code>...nodes</code> (<code>string</code> | <code>Node</code>)[] <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.replaceWith</p>"},{"location":"reference/classes/VizzuPlayer/#requestfullscreen","title":"requestFullscreen","text":"<p>\u25b8 requestFullscreen(<code>options?</code>): <code>Promise</code>\\&lt;<code>void</code>&gt;</p> <p>Displays element fullscreen and resolves promise when done.</p> <p>When supplied, options's navigationUI member indicates whether showing navigation UI while in fullscreen is preferred or not. If set to \"show\", navigation simplicity is preferred over screen space, and if set to \"hide\", more screen space is preferred. User agents are always free to honor user preference over the application's. The default value \"auto\" indicates no application preference.</p> <p>Parameters</p> Name Type <code>options?</code> <code>FullscreenOptions</code> <p>Returns</p> <p><code>Promise</code>\\&lt;<code>void</code>&gt;</p> <p>Inherited from</p> <p>HTMLElement.requestFullscreen</p>"},{"location":"reference/classes/VizzuPlayer/#requestpointerlock","title":"requestPointerLock","text":"<p>\u25b8 requestPointerLock(): <code>void</code></p> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.requestPointerLock</p>"},{"location":"reference/classes/VizzuPlayer/#scroll","title":"scroll","text":"<p>\u25b8 scroll(<code>options?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>options?</code> <code>ScrollToOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scroll</p> <p>\u25b8 scroll(<code>x</code>, <code>y</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>x</code> <code>number</code> <code>y</code> <code>number</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scroll</p>"},{"location":"reference/classes/VizzuPlayer/#scrollby","title":"scrollBy","text":"<p>\u25b8 scrollBy(<code>options?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>options?</code> <code>ScrollToOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scrollBy</p> <p>\u25b8 scrollBy(<code>x</code>, <code>y</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>x</code> <code>number</code> <code>y</code> <code>number</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scrollBy</p>"},{"location":"reference/classes/VizzuPlayer/#scrollintoview","title":"scrollIntoView","text":"<p>\u25b8 scrollIntoView(<code>arg?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>arg?</code> <code>boolean</code> | <code>ScrollIntoViewOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scrollIntoView</p>"},{"location":"reference/classes/VizzuPlayer/#scrollto","title":"scrollTo","text":"<p>\u25b8 scrollTo(<code>options?</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>options?</code> <code>ScrollToOptions</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scrollTo</p> <p>\u25b8 scrollTo(<code>x</code>, <code>y</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>x</code> <code>number</code> <code>y</code> <code>number</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.scrollTo</p>"},{"location":"reference/classes/VizzuPlayer/#setattribute","title":"setAttribute","text":"<p>\u25b8 setAttribute(<code>qualifiedName</code>, <code>value</code>): <code>void</code></p> <p>Sets the value of element's first attribute whose qualified name is qualifiedName to value.</p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <code>value</code> <code>string</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.setAttribute</p>"},{"location":"reference/classes/VizzuPlayer/#setattributens","title":"setAttributeNS","text":"<p>\u25b8 setAttributeNS(<code>namespace</code>, <code>qualifiedName</code>, <code>value</code>): <code>void</code></p> <p>Sets the value of element's attribute whose namespace is namespace and local name is localName to value.</p> <p>Parameters</p> Name Type <code>namespace</code> <code>string</code> <code>qualifiedName</code> <code>string</code> <code>value</code> <code>string</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.setAttributeNS</p>"},{"location":"reference/classes/VizzuPlayer/#setattributenode","title":"setAttributeNode","text":"<p>\u25b8 setAttributeNode(<code>attr</code>): <code>Attr</code></p> <p>Parameters</p> Name Type <code>attr</code> <code>Attr</code> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p>HTMLElement.setAttributeNode</p>"},{"location":"reference/classes/VizzuPlayer/#setattributenodens","title":"setAttributeNodeNS","text":"<p>\u25b8 setAttributeNodeNS(<code>attr</code>): <code>Attr</code></p> <p>Parameters</p> Name Type <code>attr</code> <code>Attr</code> <p>Returns</p> <p><code>Attr</code></p> <p>Inherited from</p> <p>HTMLElement.setAttributeNodeNS</p>"},{"location":"reference/classes/VizzuPlayer/#setpointercapture","title":"setPointerCapture","text":"<p>\u25b8 setPointerCapture(<code>pointerId</code>): <code>void</code></p> <p>Parameters</p> Name Type <code>pointerId</code> <code>number</code> <p>Returns</p> <p><code>void</code></p> <p>Inherited from</p> <p>HTMLElement.setPointerCapture</p>"},{"location":"reference/classes/VizzuPlayer/#toggleattribute","title":"toggleAttribute","text":"<p>\u25b8 toggleAttribute(<code>qualifiedName</code>, <code>force?</code>): <code>boolean</code></p> <p>If force is not given, \"toggles\" qualifiedName, removing it if it is present and adding it if it is not present. If force is true, adds qualifiedName. If force is false, removes qualifiedName.</p> <p>Returns true if qualifiedName is now present, and false otherwise.</p> <p>Parameters</p> Name Type <code>qualifiedName</code> <code>string</code> <code>force?</code> <code>boolean</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.toggleAttribute</p>"},{"location":"reference/classes/VizzuPlayer/#webkitmatchesselector","title":"webkitMatchesSelector","text":"<p>\u25b8 webkitMatchesSelector(<code>selectors</code>): <code>boolean</code></p> <p><code>Deprecated</code></p> <p>This is a legacy alias of <code>matches</code>.</p> <p>Parameters</p> Name Type <code>selectors</code> <code>string</code> <p>Returns</p> <p><code>boolean</code></p> <p>Inherited from</p> <p>HTMLElement.webkitMatchesSelector</p>"},{"location":"reference/interfaces/Phase/","title":"Phase","text":"<p>Vizzu-Story / Exports / Phase</p>"},{"location":"reference/interfaces/Phase/#interface-phase","title":"Interface: Phase","text":"<p>Atomic phase of a slide coressponding to one Vizzu.animate() call.</p>"},{"location":"reference/interfaces/Phase/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Phase/#animoptions","title":"animOptions","text":"<p>\u2022 <code>Optional</code> animOptions: <code>Options</code></p>"},{"location":"reference/interfaces/Phase/#config","title":"config","text":"<p>\u2022 <code>Optional</code> config: <code>Chart</code></p>"},{"location":"reference/interfaces/Phase/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p>"},{"location":"reference/interfaces/Phase/#style","title":"style","text":"<p>\u2022 <code>Optional</code> style: <code>Chart</code></p>"},{"location":"reference/interfaces/Story/","title":"Story","text":"<p>Vizzu-Story / Exports / Story</p>"},{"location":"reference/interfaces/Story/#interface-story","title":"Interface: Story","text":"<p>Story configuration object represents the whole presentation containing the underlying data and the slides.</p>"},{"location":"reference/interfaces/Story/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Story/#data","title":"data","text":"<p>\u2022 <code>Optional</code> data: <code>Set</code></p> <p>Data, copied into the initializer slide (if not present).</p>"},{"location":"reference/interfaces/Story/#slides","title":"slides","text":"<p>\u2022 slides: <code>Slide</code>[]</p> <p>The sequence of the presentation's slides.</p>"},{"location":"reference/interfaces/Story/#style","title":"style","text":"<p>\u2022 <code>Optional</code> style: <code>Chart</code></p> <p>Initial style, copied into the initializer slide (if not present).</p>"},{"location":"reference/interfaces/Vizzu.Anim.Animation/","title":"Vizzu.Anim.Animation","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / Animation</p>"},{"location":"reference/interfaces/Vizzu.Anim.Animation/#interface-animation","title":"Interface: Animation","text":"<p>Vizzu.Anim.Animation</p> <p>Stored Animation object.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Animation/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.Animation/#id","title":"id","text":"<p>\u2022 id: <code>number</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/","title":"Vizzu.Anim.Completing","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / Completing</p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#interface-completing","title":"Interface: Completing","text":"<p>Vizzu.Anim.Completing</p> <p>Promise resolves to the Vizzu object when the animation completed.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Promise</code>\\&lt;<code>Vizzu</code>&gt;</p> <p>\u21b3 <code>Completing</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.Completing/#tostringtag","title":"[toStringTag]","text":"<p>\u2022 <code>Readonly</code> [toStringTag]: <code>string</code></p> <p>Inherited from</p> <p>Promise.__@toStringTag@23</p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#activated","title":"activated","text":"<p>\u2022 activated: <code>Promise</code>\\&lt;<code>Control</code>&gt;</p> <p>Promise resolves to the animation controller object when the animation starts.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#methods","title":"Methods","text":""},{"location":"reference/interfaces/Vizzu.Anim.Completing/#catch","title":"catch","text":"<p>\u25b8 catch\\&lt;<code>TResult</code>&gt;(<code>onrejected?</code>): <code>Promise</code>\\&lt;<code>default</code> | <code>TResult</code>&gt;</p> <p>Attaches a callback for only the rejection of the Promise.</p> <p>Type parameters</p> Name Type <code>TResult</code> <code>never</code> <p>Parameters</p> Name Type Description <code>onrejected?</code> (<code>reason</code>: <code>any</code>) =&gt; <code>TResult</code> | <code>PromiseLike</code>\\&lt;<code>TResult</code>&gt; The callback to execute when the Promise is rejected. <p>Returns</p> <p><code>Promise</code>\\&lt;<code>default</code> | <code>TResult</code>&gt;</p> <p>A Promise for the completion of the callback.</p> <p>Inherited from</p> <p>Promise.catch</p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#finally","title":"finally","text":"<p>\u25b8 finally(<code>onfinally?</code>): <code>Promise</code>\\&lt;<code>default</code>&gt;</p> <p>Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The resolved value cannot be modified from the callback.</p> <p>Parameters</p> Name Type Description <code>onfinally?</code> () =&gt; <code>void</code> The callback to execute when the Promise is settled (fulfilled or rejected). <p>Returns</p> <p><code>Promise</code>\\&lt;<code>default</code>&gt;</p> <p>A Promise for the completion of the callback.</p> <p>Inherited from</p> <p>Promise.finally</p>"},{"location":"reference/interfaces/Vizzu.Anim.Completing/#then","title":"then","text":"<p>\u25b8 then\\&lt;<code>TResult1</code>, <code>TResult2</code>&gt;(<code>onfulfilled?</code>, <code>onrejected?</code>): <code>Promise</code>\\&lt;<code>TResult1</code> | <code>TResult2</code>&gt;</p> <p>Attaches callbacks for the resolution and/or rejection of the Promise.</p> <p>Type parameters</p> Name Type <code>TResult1</code> <code>default</code> <code>TResult2</code> <code>never</code> <p>Parameters</p> Name Type Description <code>onfulfilled?</code> (<code>value</code>: <code>default</code>) =&gt; <code>TResult1</code> | <code>PromiseLike</code>\\&lt;<code>TResult1</code>&gt; The callback to execute when the Promise is resolved. <code>onrejected?</code> (<code>reason</code>: <code>any</code>) =&gt; <code>TResult2</code> | <code>PromiseLike</code>\\&lt;<code>TResult2</code>&gt; The callback to execute when the Promise is rejected. <p>Returns</p> <p><code>Promise</code>\\&lt;<code>TResult1</code> | <code>TResult2</code>&gt;</p> <p>A Promise for the completion of which ever callback is executed.</p> <p>Inherited from</p> <p>Promise.then</p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/","title":"Vizzu.Anim.Control","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / Control</p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#interface-control","title":"Interface: Control","text":"<p>Vizzu.Anim.Control</p> <p>Control object for animation.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#methods","title":"Methods","text":""},{"location":"reference/interfaces/Vizzu.Anim.Control/#cancel","title":"cancel","text":"<p>\u25b8 cancel(): <code>void</code></p> <p>Cancels the animation, will reject the animation promise.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#pause","title":"pause","text":"<p>\u25b8 pause(): <code>void</code></p> <p>Pauses the controlled animation.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#play","title":"play","text":"<p>\u25b8 play(): <code>void</code></p> <p>Plays/resumes playing of the controlled animation.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#reverse","title":"reverse","text":"<p>\u25b8 reverse(): <code>void</code></p> <p>Changes the direction of the controlled animation.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#seek","title":"seek","text":"<p>\u25b8 seek(<code>value</code>): <code>void</code></p> <p>Seeks the animation to the position specified by time or progress percentage. Seeking the animation to the end position will not trigger the Vizzu.animate|animation promise to resolve.</p> <p>Parameters</p> Name Type <code>value</code> `${number}%` | <code>Duration</code> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#stop","title":"stop","text":"<p>\u25b8 stop(): <code>void</code></p> <p>Stops the current animation seeking it back to its start position.</p> <p>Returns</p> <p><code>void</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Control/#store","title":"store","text":"<p>\u25b8 store(): <code>Animation</code></p> <p>Returns a reference to the actual animation for further reuse.</p> <p>Returns</p> <p><code>Animation</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.ControlOptions/","title":"Vizzu.Anim.ControlOptions","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / ControlOptions</p>"},{"location":"reference/interfaces/Vizzu.Anim.ControlOptions/#interface-controloptions","title":"Interface: ControlOptions","text":"<p>Vizzu.Anim.ControlOptions</p>"},{"location":"reference/interfaces/Vizzu.Anim.ControlOptions/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.ControlOptions/#direction","title":"direction","text":"<p>\u2022 <code>Optional</code> direction: <code>\"reverse\"</code> | <code>\"normal\"</code></p> <p>Play direction of the animation.</p>"},{"location":"reference/interfaces/Vizzu.Anim.ControlOptions/#playstate","title":"playState","text":"<p>\u2022 <code>Optional</code> playState: <code>\"paused\"</code> | <code>\"running\"</code></p> <p>Determines if the animation should start automatically after the animate() call.</p>"},{"location":"reference/interfaces/Vizzu.Anim.ControlOptions/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>number</code></p> <p>The starting position of the animation.</p>"},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/","title":"Vizzu.Anim.GroupOptions","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / GroupOptions</p>"},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/#interface-groupoptions","title":"Interface: GroupOptions","text":"<p>Vizzu.Anim.GroupOptions</p> <p>Animation parameters for an animation group.</p>"},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>GroupOptions</code></p> <p>\u21b3 <code>Options</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/#delay","title":"delay","text":"<p>\u2022 <code>Optional</code> delay: <code>Duration</code></p> <p>Waiting time interval before the animation starts.</p>"},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/#duration","title":"duration","text":"<p>\u2022 <code>Optional</code> duration: <code>Duration</code></p> <p>The length of time an animation should take to complete.</p>"},{"location":"reference/interfaces/Vizzu.Anim.GroupOptions/#easing","title":"easing","text":"<p>\u2022 <code>Optional</code> easing: <code>Easing</code></p> <p>Sets the easing used for the animation.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Keyframe/","title":"Vizzu.Anim.Keyframe","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / Keyframe</p>"},{"location":"reference/interfaces/Vizzu.Anim.Keyframe/#interface-keyframe","title":"Interface: Keyframe","text":"<p>Vizzu.Anim.Keyframe</p> <p>Object for describing a single animation target chart state and the options of the animation to this chart state.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Keyframe/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.Keyframe/#options","title":"options","text":"<p>\u2022 <code>Optional</code> options: <code>LazyOptions</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Keyframe/#target","title":"target","text":"<p>\u2022 target: <code>LazyTarget</code></p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/","title":"Vizzu.Anim.Options","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / Options</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#interface-options","title":"Interface: Options","text":"<p>Vizzu.Anim.Options</p> <p>If no animation settings are passed to Vizzu, it will use an automatic setting depending on the actual configuration of the chart. This behavior can be overridden via the animation setting parameter.</p> <p>The animation between two states of the chart can require the transitioning of several different chart properties. These properties are grouped into separately configurable animation groups.</p> <p>The parameters can also be set for the animation as a whole. These settings rescale the durations and delays of the animation groups to the specified total delay and duration.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>GroupOptions</code></p> <p>\u21b3 <code>Options</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.Options/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>GroupOptions</code></p> <p>Marker color animation group.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#coordsystem","title":"coordSystem","text":"<p>\u2022 <code>Optional</code> coordSystem: <code>GroupOptions</code></p> <p>Coordinate system transformations animation group.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#delay","title":"delay","text":"<p>\u2022 <code>Optional</code> delay: <code>Duration</code></p> <p>Waiting time interval before the animation starts.</p> <p>Inherited from</p> <p>GroupOptions.delay</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#duration","title":"duration","text":"<p>\u2022 <code>Optional</code> duration: <code>Duration</code></p> <p>The length of time an animation should take to complete.</p> <p>Inherited from</p> <p>GroupOptions.duration</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#easing","title":"easing","text":"<p>\u2022 <code>Optional</code> easing: <code>Easing</code></p> <p>Sets the easing used for the animation.</p> <p>Inherited from</p> <p>GroupOptions.easing</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#geometry","title":"geometry","text":"<p>\u2022 <code>Optional</code> geometry: <code>GroupOptions</code></p> <p>Marker geometry morph animation group.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#hide","title":"hide","text":"<p>\u2022 <code>Optional</code> hide: <code>GroupOptions</code></p> <p>Animation group for markers fading out (due to filtering or added/removed data series).</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>GroupOptions</code></p> <p>Legend animation parameters.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#regroupstrategy","title":"regroupStrategy","text":"<p>\u2022 <code>Optional</code> regroupStrategy: <code>RegroupStrategy</code></p> <p>Selects the algorithm for transition in case of data grouped differently on the source and target chart.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#show","title":"show","text":"<p>\u2022 <code>Optional</code> show: <code>GroupOptions</code></p> <p>Animation group for new markers fading in (due to filtering or added/removed data series).</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#style","title":"style","text":"<p>\u2022 <code>Optional</code> style: <code>GroupOptions</code></p> <p>Animation group for style parameters.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>GroupOptions</code></p> <p>Title animation parameters.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#tooltip","title":"tooltip","text":"<p>\u2022 <code>Optional</code> tooltip: <code>GroupOptions</code></p> <p>Animation group for tooltip transitions.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#x","title":"x","text":"<p>\u2022 <code>Optional</code> x: <code>GroupOptions</code></p> <p>Animation group for marker transitions in the direction of the x-axis.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Options/#y","title":"y","text":"<p>\u2022 <code>Optional</code> y: <code>GroupOptions</code></p> <p>Animation group for marker transitions in the direction of the y-axis.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Target/","title":"Vizzu.Anim.Target","text":"<p>Vizzu-Story / Exports / Vizzu / Anim / Target</p>"},{"location":"reference/interfaces/Vizzu.Anim.Target/#interface-target","title":"Interface: Target","text":"<p>Vizzu.Anim.Target</p> <p>Represents a state in the animation describing the data, the chart, and the style parameters to be changed from the actual state. Passing null as style will reset every style parameter to default.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Target/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Anim.Target/#config","title":"config","text":"<p>\u2022 <code>Optional</code> config: <code>Chart</code></p> <p>Chart configuration changes.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Target/#data","title":"data","text":"<p>\u2022 <code>Optional</code> data: <code>Set</code></p> <p>Data set.</p>"},{"location":"reference/interfaces/Vizzu.Anim.Target/#style","title":"style","text":"<p>\u2022 <code>Optional</code> style: <code>Chart</code></p> <p>Style changes.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/","title":"Vizzu.Config.Channel","text":"<p>Vizzu-Story / Exports / Vizzu / Config / Channel</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#interface-channel","title":"Interface: Channel","text":"<p>Vizzu.Config.Channel</p> <p>Channels are the main building blocks of the chart. Each channel describes a particular aspect of the markers (vertical &amp; horizontal position, color, etc.) and connects them to the underlying data. A single measure and an ordered list of dimensions can be on each channel. The dimensions will recursively slice the measure on the channel. The channels are represented on the chart as an axis or legend.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Config.Channel/#attach","title":"attach","text":"<p>\u2022 <code>Optional</code> attach: <code>SeriesList</code></p> <p>List of data series names to be added to the channel beside the ones already added.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#axis","title":"axis","text":"<p>\u2022 <code>Optional</code> axis: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the axis line on axis channels.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#detach","title":"detach","text":"<p>\u2022 <code>Optional</code> detach: <code>SeriesList</code></p> <p>List of data series names to be removed from the channel.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#guides","title":"guides","text":"<p>\u2022 <code>Optional</code> guides: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the grid lines on axis channels showing dimension data.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#interlacing","title":"interlacing","text":"<p>\u2022 <code>Optional</code> interlacing: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the interlacing on axis channels showing measure data.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#labellevel","title":"labelLevel","text":"<p>\u2022 <code>Optional</code> labelLevel: <code>number</code></p> <p>Only one dimension can be shown on an axis or legend by name. This index specifies which attached series should be used.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#labels","title":"labels","text":"<p>\u2022 <code>Optional</code> labels: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the axis labels on axis channels.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#markerguides","title":"markerGuides","text":"<p>\u2022 <code>Optional</code> markerGuides: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the guide lines on axis channels showing measure data for all marker positions.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#range","title":"range","text":"<p>\u2022 <code>Optional</code> range: <code>ChannelRange</code></p> <p>Specifies the range that determines how the represented data scales on the channel.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#set","title":"set","text":"<p>\u2022 <code>Optional</code> set: <code>SeriesList</code></p> <p>List of data series names on the channel.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#ticks","title":"ticks","text":"<p>\u2022 <code>Optional</code> ticks: <code>boolean</code> | <code>\"auto\"</code></p> <p>Enables the axis ticks on axis channels showing measure data.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channel/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>This title is shown on the axis or legend corresponding to the channel. If 'auto', the title will be the name of the measure attached to that channel.</p>"},{"location":"reference/interfaces/Vizzu.Config.ChannelRange/","title":"Vizzu.Config.ChannelRange","text":"<p>Vizzu-Story / Exports / Vizzu / Config / ChannelRange</p>"},{"location":"reference/interfaces/Vizzu.Config.ChannelRange/#interface-channelrange","title":"Interface: ChannelRange","text":"<p>Vizzu.Config.ChannelRange</p> <p>Channel range specifies how to scale the represented data.</p>"},{"location":"reference/interfaces/Vizzu.Config.ChannelRange/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Config.ChannelRange/#max","title":"max","text":"<p>\u2022 <code>Optional</code> max: <code>ChannelExtrema</code></p>"},{"location":"reference/interfaces/Vizzu.Config.ChannelRange/#min","title":"min","text":"<p>\u2022 <code>Optional</code> min: <code>ChannelExtrema</code></p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/","title":"Vizzu.Config.Channels","text":"<p>Vizzu-Story / Exports / Vizzu / Config / Channels</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#interface-channels","title":"Interface: Channels","text":"<p>Vizzu.Config.Channels</p> <p>Channel configuration. A data series' name or a list of the data series' names can be used as a short-hand - instead of the channel object - to set data series for the channel. Setting a channel to null will remove all data series from it.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Channels</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Config.Channels/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' base color. The markers' actual color can also be affected by the lightness channel.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the content of the labels that appear on the markers.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#lightness","title":"lightness","text":"<p>\u2022 <code>Optional</code> lightness: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for markers' lightness.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#noop","title":"noop","text":"<p>\u2022 <code>Optional</code> noop: <code>SeriesList</code> | <code>Channel</code></p> <p>Splits the markers as all the other channels, but have no effect on the markers' appearance. Thus, it only works with dimensions.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#size","title":"size","text":"<p>\u2022 <code>Optional</code> size: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' size. Effective only for circle and line geometry affecting the circle area or the line width respectively.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#x","title":"x","text":"<p>\u2022 <code>Optional</code> x: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the X-axis, determining the position of the markers on the x-axis - or their angle when using polar coordinates. Note: leaving x and y channels empty will result in a chart \"without coordinates\" like a Treemap or a Bubble Chart.</p>"},{"location":"reference/interfaces/Vizzu.Config.Channels/#y","title":"y","text":"<p>\u2022 <code>Optional</code> y: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the Y-axis, determining the position of the markers on the y-axis - or their radius when using polar coordinates) .</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/","title":"Vizzu.Config.Chart","text":"<p>Vizzu-Story / Exports / Vizzu / Config / Chart</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#interface-chart","title":"Interface: Chart","text":"<p>Vizzu.Config.Chart</p> <p>The config contains all of the parameters needed to render a particular static chart or a state of an animated chart.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Channels</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Config.Chart/#align","title":"align","text":"<p>\u2022 <code>Optional</code> align: <code>\"max\"</code> | <code>\"none\"</code> | <code>\"center\"</code> | <code>\"min\"</code> | <code>\"stretch\"</code></p> <p>Sets the alignment of the markers with relation to the x- or the y-axis depending on where the measure is. In case both axes have measures on them, this is determined by the orientation of the chart.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#channels","title":"channels","text":"<p>\u2022 <code>Optional</code> channels: <code>Channels</code></p> <p>List of the chart's channels' configuration. The chart object also extends the channels object as a configuration shorthand.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' base color. The markers' actual color can also be affected by the lightness channel.</p> <p>Inherited from</p> <p>Channels.color</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#coordsystem","title":"coordSystem","text":"<p>\u2022 <code>Optional</code> coordSystem: <code>\"cartesian\"</code> | <code>\"polar\"</code></p> <p>Sets the coordinate system for the chart. Switch to the 'polar' coordinate system to create a chart from the pie/radial chart family.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#geometry","title":"geometry","text":"<p>\u2022 <code>Optional</code> geometry: <code>\"area\"</code> | <code>\"circle\"</code> | <code>\"line\"</code> | <code>\"rectangle\"</code></p> <p>Sets the geometric elements used for the markers to represent the data.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the content of the labels that appear on the markers.</p> <p>Inherited from</p> <p>Channels.label</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>\"auto\"</code> | <code>\"color\"</code> | <code>\"size\"</code> | <code>\"lightness\"</code></p> <p>Specifies which channel should be shown on the legend. If set to null, the legend will not be shown and will not take up any space in the chart layout. If set to auto, the internal logic will select the most suitable channel for the legend.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#lightness","title":"lightness","text":"<p>\u2022 <code>Optional</code> lightness: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for markers' lightness.</p> <p>Inherited from</p> <p>Channels.lightness</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#noop","title":"noop","text":"<p>\u2022 <code>Optional</code> noop: <code>SeriesList</code> | <code>Channel</code></p> <p>Splits the markers as all the other channels, but have no effect on the markers' appearance. Thus, it only works with dimensions.</p> <p>Inherited from</p> <p>Channels.noop</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code></p> <p>If both axes have measures on them, this parameter sets the orientation of the chart, meaning to which axis the graphical elements are oriented to.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#reverse","title":"reverse","text":"<p>\u2022 <code>Optional</code> reverse: <code>boolean</code></p> <p>Reverts the order of the markers if set.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#rotate","title":"rotate","text":"<p>\u2022 <code>Optional</code> rotate: <code>number</code></p> <p>Rotates the plot area by the specified angle in degree. Note: this is an experimental, not tested feature.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#size","title":"size","text":"<p>\u2022 <code>Optional</code> size: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the markers' size. Effective only for circle and line geometry affecting the circle area or the line width respectively.</p> <p>Inherited from</p> <p>Channels.size</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#sort","title":"sort","text":"<p>\u2022 <code>Optional</code> sort: <code>\"none\"</code> | <code>\"byValue\"</code></p> <ul> <li>'none': markers are sorted in the order as the corresponding data appear in   the data set.</li> <li>'byValue': markers will be sorted by the corresponding measure (if present) in   decreasing order.</li> </ul>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#split","title":"split","text":"<p>\u2022 <code>Optional</code> split: <code>boolean</code></p> <p>If set to true, markers will be split by the dimension(s) along the axis. This works if you have at least one dimension and a measure on the same axis.In case both axes have measures and dimension(s) on them, this is determined by the orientation of the chart.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>string</code></p> <p>This is the title shown on the top of the chart. If set to null, the title will not be shown and will not take up any space in the chart layout.</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#x","title":"x","text":"<p>\u2022 <code>Optional</code> x: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the X-axis, determining the position of the markers on the x-axis - or their angle when using polar coordinates. Note: leaving x and y channels empty will result in a chart \"without coordinates\" like a Treemap or a Bubble Chart.</p> <p>Inherited from</p> <p>Channels.x</p>"},{"location":"reference/interfaces/Vizzu.Config.Chart/#y","title":"y","text":"<p>\u2022 <code>Optional</code> y: <code>SeriesList</code> | <code>Channel</code></p> <p>Parameters for the Y-axis, determining the position of the markers on the y-axis - or their radius when using polar coordinates) .</p> <p>Inherited from</p> <p>Channels.y</p>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/","title":"Vizzu.Data.AbstractSeriesInfo","text":"<p>Vizzu-Story / Exports / Vizzu / Data / AbstractSeriesInfo</p>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#interface-abstractseriesinfo","title":"Interface: AbstractSeriesInfo","text":"<p>Vizzu.Data.AbstractSeriesInfo</p> <p>Additional info about a data series besides the contained data.</p>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>AbstractSeriesInfo</code></p> <p>\u21b3\u21b3 <code>DimensionSeriesInfo</code></p> <p>\u21b3\u21b3 <code>MeasureSeriesInfo</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#length","title":"length","text":"<p>\u2022 length: <code>number</code></p> <p>Count of values in the series.</p>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>SeriesMetaInfo.name</p>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>SeriesMetaInfo.type</p>"},{"location":"reference/interfaces/Vizzu.Data.AbstractSeriesInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>SeriesMetaInfo.unit</p>"},{"location":"reference/interfaces/Vizzu.Data.Cube/","title":"Vizzu.Data.Cube","text":"<p>Vizzu-Story / Exports / Vizzu / Data / Cube</p>"},{"location":"reference/interfaces/Vizzu.Data.Cube/#interface-cube","title":"Interface: Cube","text":"<p>Vizzu.Data.Cube</p> <p>N dimensional data cude</p>"},{"location":"reference/interfaces/Vizzu.Data.Cube/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>Cube</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.Cube/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.Cube/#dimensions","title":"dimensions","text":"<p>\u2022 <code>Optional</code> dimensions: <code>Series</code>[]</p> <p>The list of the dimensions of the data cube.</p>"},{"location":"reference/interfaces/Vizzu.Data.Cube/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p>Filter.filter</p>"},{"location":"reference/interfaces/Vizzu.Data.Cube/#measures","title":"measures","text":"<p>\u2022 <code>Optional</code> measures: <code>CubeData</code>[]</p> <p>The list of measures of the data cube.</p>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/","title":"Vizzu.Data.CubeData","text":"<p>Vizzu-Story / Exports / Vizzu / Data / CubeData</p>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/#interface-cubedata","title":"Interface: CubeData","text":"<p>Vizzu.Data.CubeData</p> <p>Defines a data series of the data cube, and contains a particular variable's values in the data cube and meta info about that variable.</p>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>CubeData</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.CubeData/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>SeriesMetaInfo.name</p>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>SeriesMetaInfo.type</p>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>SeriesMetaInfo.unit</p>"},{"location":"reference/interfaces/Vizzu.Data.CubeData/#values","title":"values","text":"<p>\u2022 values: <code>CubeRow</code></p> <p>A nested array that contains the values of the data series. Nesting level should match the number of dimensions.</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/","title":"Vizzu.Data.DimensionSeriesInfo","text":"<p>Vizzu-Story / Exports / Vizzu / Data / DimensionSeriesInfo</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#interface-dimensionseriesinfo","title":"Interface: DimensionSeriesInfo","text":"<p>Vizzu.Data.DimensionSeriesInfo</p> <p>Meta data about dimension data series</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>AbstractSeriesInfo</code></p> <p>\u21b3 <code>DimensionSeriesInfo</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#categories","title":"categories","text":"<p>\u2022 categories: <code>string</code>[]</p> <p>Distinct values in the series</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#length","title":"length","text":"<p>\u2022 length: <code>number</code></p> <p>Count of values in the series.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.length</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.name</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>AbstractSeriesInfo.type</p>"},{"location":"reference/interfaces/Vizzu.Data.DimensionSeriesInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>AbstractSeriesInfo.unit</p>"},{"location":"reference/interfaces/Vizzu.Data.Filter/","title":"Vizzu.Data.Filter","text":"<p>Vizzu-Story / Exports / Vizzu / Data / Filter</p>"},{"location":"reference/interfaces/Vizzu.Data.Filter/#interface-filter","title":"Interface: Filter","text":"<p>Vizzu.Data.Filter</p>"},{"location":"reference/interfaces/Vizzu.Data.Filter/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>TableBySeries</code></p> <p>\u21b3 <code>TableByRecords</code></p> <p>\u21b3 <code>Cube</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.Filter/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.Filter/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/","title":"Vizzu.Data.MeasureSeriesInfo","text":"<p>Vizzu-Story / Exports / Vizzu / Data / MeasureSeriesInfo</p>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#interface-measureseriesinfo","title":"Interface: MeasureSeriesInfo","text":"<p>Vizzu.Data.MeasureSeriesInfo</p> <p>Meta data about measure data series</p>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>AbstractSeriesInfo</code></p> <p>\u21b3 <code>MeasureSeriesInfo</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#length","title":"length","text":"<p>\u2022 length: <code>number</code></p> <p>Count of values in the series.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.length</p>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>AbstractSeriesInfo.name</p>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#range","title":"range","text":"<p>\u2022 range: <code>Object</code></p> <p>Type declaration</p> Name Type Description <code>max</code> <code>number</code> Maximal value in the series <code>min</code> <code>number</code> Minimal value in the series"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>AbstractSeriesInfo.type</p>"},{"location":"reference/interfaces/Vizzu.Data.MeasureSeriesInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>AbstractSeriesInfo.unit</p>"},{"location":"reference/interfaces/Vizzu.Data.Metainfo/","title":"Vizzu.Data.Metainfo","text":"<p>Vizzu-Story / Exports / Vizzu / Data / Metainfo</p>"},{"location":"reference/interfaces/Vizzu.Data.Metainfo/#interface-metainfo","title":"Interface: Metainfo","text":"<p>Vizzu.Data.Metainfo</p> <p>Meta data about the data set</p>"},{"location":"reference/interfaces/Vizzu.Data.Metainfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.Metainfo/#series","title":"series","text":"<p>\u2022 series: <code>SeriesInfo</code>[]</p>"},{"location":"reference/interfaces/Vizzu.Data.Record/","title":"Vizzu.Data.Record","text":"<p>Vizzu-Story / Exports / Vizzu / Data / Record</p>"},{"location":"reference/interfaces/Vizzu.Data.Record/#interface-record","title":"Interface: Record","text":"<p>Vizzu.Data.Record</p> <p>A record of the data set, containing one value of each data series corresponding to the same index.</p>"},{"location":"reference/interfaces/Vizzu.Data.Record/#indexable","title":"Indexable","text":"<p>\u25aa [seriesName: <code>Series</code>[<code>\"name\"</code>]]: <code>Value</code></p>"},{"location":"reference/interfaces/Vizzu.Data.Series/","title":"Vizzu.Data.Series","text":"<p>Vizzu-Story / Exports / Vizzu / Data / Series</p>"},{"location":"reference/interfaces/Vizzu.Data.Series/#interface-series","title":"Interface: Series","text":"<p>Vizzu.Data.Series</p> <p>Defines a data series of the data set, and contains a particular variable's values in the data set and meta info about the variable.</p>"},{"location":"reference/interfaces/Vizzu.Data.Series/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>Series</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.Series/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.Series/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p> <p>Inherited from</p> <p>SeriesMetaInfo.name</p>"},{"location":"reference/interfaces/Vizzu.Data.Series/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul> <p>Inherited from</p> <p>SeriesMetaInfo.type</p>"},{"location":"reference/interfaces/Vizzu.Data.Series/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p> <p>Inherited from</p> <p>SeriesMetaInfo.unit</p>"},{"location":"reference/interfaces/Vizzu.Data.Series/#values","title":"values","text":"<p>\u2022 values: <code>Values</code></p> <p>The array that contains the values of the data series. The value types should match type. If the data series is shorter than the longest data series defined, it will be internally extended with empty values.</p>"},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/","title":"Vizzu.Data.SeriesMetaInfo","text":"<p>Vizzu-Story / Exports / Vizzu / Data / SeriesMetaInfo</p>"},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/#interface-seriesmetainfo","title":"Interface: SeriesMetaInfo","text":"<p>Vizzu.Data.SeriesMetaInfo</p> <p>Additional info about a data series besides the contained data.</p>"},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>SeriesMetaInfo</code></p> <p>\u21b3 <code>AbstractSeriesInfo</code></p> <p>\u21b3 <code>Series</code></p> <p>\u21b3 <code>CubeData</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/#name","title":"name","text":"<p>\u2022 name: <code>string</code></p> <p>Name of the data series. It will be the unique id of the series to reference it in various parts of the API, mainly in Channel and Record. This name will also be used by default for Axis and Legend title.</p>"},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"dimension\"</code> | <code>\"measure\"</code></p> <p>Type of the data series:</p> <ul> <li>'dimension' - categorical data containing strings (dates should also be added   as strings);</li> <li>'measure' - continuous data containing numbers. If not set, the library will   attempt to determine the type based on the type of the first value. Number   type will result in measure, string type will result in dimension.</li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.SeriesMetaInfo/#unit","title":"unit","text":"<p>\u2022 <code>Optional</code> unit: <code>string</code></p> <p>Unit of the data series</p>"},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/","title":"Vizzu.Data.TableByRecords","text":"<p>Vizzu-Story / Exports / Vizzu / Data / TableByRecords</p>"},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/#interface-tablebyrecords","title":"Interface: TableByRecords","text":"<p>Vizzu.Data.TableByRecords</p> <p>Data table specified by records.</p>"},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>TableByRecords</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p>Filter.filter</p>"},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/#records","title":"records","text":"<p>\u2022 records: <code>Value</code>[][]</p> <p>The array of data records that make up the data set.</p>"},{"location":"reference/interfaces/Vizzu.Data.TableByRecords/#series","title":"series","text":"<p>\u2022 <code>Optional</code> series: <code>SeriesMetaInfo</code>[]</p> <p>The information about the data series in the records of the data set. Note: not needed if it was previously specified.</p>"},{"location":"reference/interfaces/Vizzu.Data.TableBySeries/","title":"Vizzu.Data.TableBySeries","text":"<p>Vizzu-Story / Exports / Vizzu / Data / TableBySeries</p>"},{"location":"reference/interfaces/Vizzu.Data.TableBySeries/#interface-tablebyseries","title":"Interface: TableBySeries","text":"<p>Vizzu.Data.TableBySeries</p> <p>Data table specified by series.</p>"},{"location":"reference/interfaces/Vizzu.Data.TableBySeries/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Filter</code></p> <p>\u21b3 <code>TableBySeries</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Data.TableBySeries/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Data.TableBySeries/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>FilterCallback</code></p> <p>A filter callback is called on each record of the dataset on chart generation. If the callback returns false, the record will not be shown on the chart.</p> <p>Inherited from</p> <p>Filter.filter</p>"},{"location":"reference/interfaces/Vizzu.Data.TableBySeries/#series","title":"series","text":"<p>\u2022 series: <code>Series</code>[]</p> <p>The series that make up the the data set.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/","title":"Vizzu.Styles.Axis","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Axis</p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#interface-axis","title":"Interface: Axis","text":"<p>Vizzu.Styles.Axis</p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Axis/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>Color of the axis line.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#guides","title":"guides","text":"<p>\u2022 <code>Optional</code> guides: <code>Guides</code></p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#interlacing","title":"interlacing","text":"<p>\u2022 <code>Optional</code> interlacing: <code>Interlacing</code></p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>AxisLabel</code></p> <p>Style parameters of the axis labels.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#ticks","title":"ticks","text":"<p>\u2022 <code>Optional</code> ticks: <code>Ticks</code></p>"},{"location":"reference/interfaces/Vizzu.Styles.Axis/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>AxisTitle</code></p> <p>Style parameters of the axis title.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/","title":"Vizzu.Styles.AxisLabel","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / AxisLabel</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#interface-axislabel","title":"Interface: AxisLabel","text":"<p>Vizzu.Styles.AxisLabel</p> <p>Style settings for the values shown on the axis to display the scale being used or the categories along the axis. Note: textAlign has no effect on the Axis label.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>OrientedLabel</code></p> <p>\u21b3 <code>AxisLabel</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#angle","title":"angle","text":"<p>\u2022 <code>Optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p> <p>Inherited from</p> <p>OrientedLabel.angle</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.color</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>OrientedLabel.fontFamily</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>OrientedLabel.fontSize</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>OrientedLabel.fontStyle</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>OrientedLabel.fontWeight</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>OrientedLabel.maxFractionDigits</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>OrientedLabel.numberFormat</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>OrientedLabel.numberScale</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"normal\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p> <p>Inherited from</p> <p>OrientedLabel.orientation</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"axis\"</code> | <code>\"max-edge\"</code> | <code>\"min-edge\"</code></p> <p>Label position relatively to the plot.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#side","title":"side","text":"<p>\u2022 <code>Optional</code> side: <code>\"positive\"</code> | <code>\"negative\"</code></p> <p>Label alignment relatively to the position on the plot.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisLabel/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.textAlign</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/","title":"Vizzu.Styles.AxisTitle","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / AxisTitle</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#interface-axistitle","title":"Interface: AxisTitle","text":"<p>Vizzu.Styles.AxisTitle</p> <p>Style settings of the Axis title</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Label</code></p> <p>\u21b3 <code>AxisTitle</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>Label.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>Label.color</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Label.fontFamily</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Label.fontSize</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Label.fontStyle</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Label.fontWeight</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>Label.maxFractionDigits</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>Label.numberFormat</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>Label.numberScale</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"horizontal\"</code> | <code>\"vertical\"</code></p> <p>The orientation of the title.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Label.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Label.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Label.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Label.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"axis\"</code> | <code>\"max-edge\"</code> | <code>\"min-edge\"</code></p> <p>Title position relatively to the plot.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#side","title":"side","text":"<p>\u2022 <code>Optional</code> side: <code>\"positive\"</code> | <code>\"negative\"</code> | <code>\"upon\"</code></p> <p>Title alignment relatively to the position on the plot.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>Label.textAlign</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#vposition","title":"vposition","text":"<p>\u2022 <code>Optional</code> vposition: <code>\"end\"</code> | <code>\"middle\"</code> | <code>\"begin\"</code></p> <p>Title position on the axis or edge.</p>"},{"location":"reference/interfaces/Vizzu.Styles.AxisTitle/#vside","title":"vside","text":"<p>\u2022 <code>Optional</code> vside: <code>\"positive\"</code> | <code>\"negative\"</code> | <code>\"upon\"</code></p> <p>Title alignment on the axis or edge.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Box/","title":"Vizzu.Styles.Box","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Box</p>"},{"location":"reference/interfaces/Vizzu.Styles.Box/#interface-box","title":"Interface: Box","text":"<p>Vizzu.Styles.Box</p>"},{"location":"reference/interfaces/Vizzu.Styles.Box/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Tooltip</code></p> <p>\u21b3 <code>Plot</code></p> <p>\u21b3 <code>Legend</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Box/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Box/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Box/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Box/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/","title":"Vizzu.Styles.Chart","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Chart</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#interface-chart","title":"Interface: Chart","text":"<p>Vizzu.Styles.Chart</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Padding</code></li> </ul> <ul> <li><code>Box</code></li> </ul> <ul> <li> <p><code>Font</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Chart/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Font.fontFamily</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Font.fontSize</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Font.fontStyle</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Font.fontWeight</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#legend","title":"legend","text":"<p>\u2022 <code>Optional</code> legend: <code>Legend</code></p> <p>Style settings for the legend.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#logo","title":"logo","text":"<p>\u2022 <code>Optional</code> logo: <code>Logo</code></p> <p>Style settings of the Vizzu logo.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#plot","title":"plot","text":"<p>\u2022 <code>Optional</code> plot: <code>Plot</code></p> <p>Style settings for the plot area.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>Label</code></p> <p>Style settings for the main chart title.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Chart/#tooltip","title":"tooltip","text":"<p>\u2022 <code>Optional</code> tooltip: <code>Tooltip</code></p> <p>Style settings for the tooltip.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/","title":"Vizzu.Styles.DataPoint","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / DataPoint</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#interface-datapoint","title":"Interface: DataPoint","text":"<p>Vizzu.Styles.DataPoint</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>DataPoint</code></p> <p>\u21b3 <code>Marker</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#circlemaxradius","title":"circleMaxRadius","text":"<p>\u2022 <code>Optional</code> circleMaxRadius: <code>number</code></p> <p>Maximum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#circleminradius","title":"circleMinRadius","text":"<p>\u2022 <code>Optional</code> circleMinRadius: <code>number</code></p> <p>Minimum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#colorgradient","title":"colorGradient","text":"<p>\u2022 <code>Optional</code> colorGradient: <code>string</code></p> <p>Color gradient used for the measure on the color channel.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#colorpalette","title":"colorPalette","text":"<p>\u2022 <code>Optional</code> colorPalette: <code>string</code></p> <p>Color palette used for the dimension on the color channel.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#linemaxwidth","title":"lineMaxWidth","text":"<p>\u2022 <code>Optional</code> lineMaxWidth: <code>number</code></p> <p>Maximum line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#lineminwidth","title":"lineMinWidth","text":"<p>\u2022 <code>Optional</code> lineMinWidth: <code>number</code></p> <p>Minimum of line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#maxlightness","title":"maxLightness","text":"<p>\u2022 <code>Optional</code> maxLightness: <code>number</code></p> <p>Lightness value associated with the maximum value of the lightness channel's range.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#minlightness","title":"minLightness","text":"<p>\u2022 <code>Optional</code> minLightness: <code>number</code></p> <p>Lightness value associated with the minimum value of the lightness channel's range.</p>"},{"location":"reference/interfaces/Vizzu.Styles.DataPoint/#rectanglespacing","title":"rectangleSpacing","text":"<p>\u2022 <code>Optional</code> rectangleSpacing: <code>number</code></p> <p>Spacing between bars/columns. The value specifies the size of the spacing as a factor of the marker size. e.g.: 0.1 means 10% of marker height/width depending on the chart's orientation.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Font/","title":"Vizzu.Styles.Font","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Font</p>"},{"location":"reference/interfaces/Vizzu.Styles.Font/#interface-font","title":"Interface: Font","text":"<p>Vizzu.Styles.Font</p>"},{"location":"reference/interfaces/Vizzu.Styles.Font/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Font</code></p> <p>\u21b3 <code>Tooltip</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Font/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Font/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Font/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p>"},{"location":"reference/interfaces/Vizzu.Styles.Font/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Font/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Guides/","title":"Vizzu.Styles.Guides","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Guides</p>"},{"location":"reference/interfaces/Vizzu.Styles.Guides/#interface-guides","title":"Interface: Guides","text":"<p>Vizzu.Styles.Guides</p>"},{"location":"reference/interfaces/Vizzu.Styles.Guides/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Guides/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the guides.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Guides/#linewidth","title":"lineWidth","text":"<p>\u2022 <code>Optional</code> lineWidth: <code>number</code></p> <p>Line width of the guide in pixel.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Interlacing/","title":"Vizzu.Styles.Interlacing","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Interlacing</p>"},{"location":"reference/interfaces/Vizzu.Styles.Interlacing/#interface-interlacing","title":"Interface: Interlacing","text":"<p>Vizzu.Styles.Interlacing</p>"},{"location":"reference/interfaces/Vizzu.Styles.Interlacing/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Interlacing/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>Color of the interlacing pattern.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/","title":"Vizzu.Styles.Legend","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Legend</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#interface-legend","title":"Interface: Legend","text":"<p>Vizzu.Styles.Legend</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Padding</code></li> </ul> <ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Legend</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Legend/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>Label</code></p> <p>Style settings for the labels on the legend.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#marker","title":"marker","text":"<p>\u2022 <code>Optional</code> marker: <code>LegendMarker</code></p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#maxwidth","title":"maxWidth","text":"<p>\u2022 <code>Optional</code> maxWidth: <code>Length</code></p> <p>Limit for the width of the boundary box.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#title","title":"title","text":"<p>\u2022 <code>Optional</code> title: <code>Label</code></p> <p>Style settings for the legend's title.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Legend/#width","title":"width","text":"<p>\u2022 <code>Optional</code> width: <code>Length</code></p> <p>Width of the legend's boundary box.</p>"},{"location":"reference/interfaces/Vizzu.Styles.LegendMarker/","title":"Vizzu.Styles.LegendMarker","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / LegendMarker</p>"},{"location":"reference/interfaces/Vizzu.Styles.LegendMarker/#interface-legendmarker","title":"Interface: LegendMarker","text":"<p>Vizzu.Styles.LegendMarker</p>"},{"location":"reference/interfaces/Vizzu.Styles.LegendMarker/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.LegendMarker/#size","title":"size","text":"<p>\u2022 <code>Optional</code> size: <code>Length</code></p> <p>Size of the legend marker (diameter or side length).</p>"},{"location":"reference/interfaces/Vizzu.Styles.LegendMarker/#type","title":"type","text":"<p>\u2022 <code>Optional</code> type: <code>\"square\"</code> | <code>\"circle\"</code></p> <p>Shape of the legend marker.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/","title":"Vizzu.Styles.Logo","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Logo</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#interface-logo","title":"Interface: Logo","text":"<p>Vizzu.Styles.Logo</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Padding</code></p> <p>\u21b3 <code>Logo</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Logo/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>ColorTransform</code></p> <p>Color transformation applied on the colored Vizzu Logo</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.Logo/#width","title":"width","text":"<p>\u2022 <code>Optional</code> width: <code>Length</code></p> <p>Width of the Vizzu logo</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/","title":"Vizzu.Styles.Marker","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Marker</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#interface-marker","title":"Interface: Marker","text":"<p>Vizzu.Styles.Marker</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>DataPoint</code></p> <p>\u21b3 <code>Marker</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Marker/#borderopacity","title":"borderOpacity","text":"<p>\u2022 <code>Optional</code> borderOpacity: <code>number</code></p> <p>Opacity of the marker border.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#borderopacitymode","title":"borderOpacityMode","text":"<p>\u2022 <code>Optional</code> borderOpacityMode: <code>\"straight\"</code> | <code>\"premultiplied\"</code></p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>Width of the marker border in pixels.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#circlemaxradius","title":"circleMaxRadius","text":"<p>\u2022 <code>Optional</code> circleMaxRadius: <code>number</code></p> <p>Maximum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.circleMaxRadius</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#circleminradius","title":"circleMinRadius","text":"<p>\u2022 <code>Optional</code> circleMinRadius: <code>number</code></p> <p>Minimum circle radius specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.circleMinRadius</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#colorgradient","title":"colorGradient","text":"<p>\u2022 <code>Optional</code> colorGradient: <code>string</code></p> <p>Color gradient used for the measure on the color channel.</p> <p>Inherited from</p> <p>DataPoint.colorGradient</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#colorpalette","title":"colorPalette","text":"<p>\u2022 <code>Optional</code> colorPalette: <code>string</code></p> <p>Color palette used for the dimension on the color channel.</p> <p>Inherited from</p> <p>DataPoint.colorPalette</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#fillopacity","title":"fillOpacity","text":"<p>\u2022 <code>Optional</code> fillOpacity: <code>number</code></p> <p>Opacity of the marker fill color.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#guides","title":"guides","text":"<p>\u2022 <code>Optional</code> guides: <code>Guides</code></p> <p>Style settings for guide lines drawn for the markers.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#label","title":"label","text":"<p>\u2022 <code>Optional</code> label: <code>MarkerLabel</code></p> <p>Style settings for the marker labels.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#linemaxwidth","title":"lineMaxWidth","text":"<p>\u2022 <code>Optional</code> lineMaxWidth: <code>number</code></p> <p>Maximum line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.lineMaxWidth</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#lineminwidth","title":"lineMinWidth","text":"<p>\u2022 <code>Optional</code> lineMinWidth: <code>number</code></p> <p>Minimum of line width specified as proportion of plot area size. e.g.: 0.01 means 1% of the width of the plot area.</p> <p>Inherited from</p> <p>DataPoint.lineMinWidth</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#maxlightness","title":"maxLightness","text":"<p>\u2022 <code>Optional</code> maxLightness: <code>number</code></p> <p>Lightness value associated with the maximum value of the lightness channel's range.</p> <p>Inherited from</p> <p>DataPoint.maxLightness</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#minlightness","title":"minLightness","text":"<p>\u2022 <code>Optional</code> minLightness: <code>number</code></p> <p>Lightness value associated with the minimum value of the lightness channel's range.</p> <p>Inherited from</p> <p>DataPoint.minLightness</p>"},{"location":"reference/interfaces/Vizzu.Styles.Marker/#rectanglespacing","title":"rectangleSpacing","text":"<p>\u2022 <code>Optional</code> rectangleSpacing: <code>number</code></p> <p>Spacing between bars/columns. The value specifies the size of the spacing as a factor of the marker size. e.g.: 0.1 means 10% of marker height/width depending on the chart's orientation.</p> <p>Inherited from</p> <p>DataPoint.rectangleSpacing</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/","title":"Vizzu.Styles.MarkerLabel","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / MarkerLabel</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#interface-markerlabel","title":"Interface: MarkerLabel","text":"<p>Vizzu.Styles.MarkerLabel</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>OrientedLabel</code></p> <p>\u21b3 <code>MarkerLabel</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#angle","title":"angle","text":"<p>\u2022 <code>Optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p> <p>Inherited from</p> <p>OrientedLabel.angle</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.color</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#filter","title":"filter","text":"<p>\u2022 <code>Optional</code> filter: <code>ColorTransform</code></p> <p>Defines the transformation used for calculating the label color from the marker color.</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>OrientedLabel.fontFamily</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>OrientedLabel.fontSize</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>OrientedLabel.fontStyle</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>OrientedLabel.fontWeight</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#format","title":"format","text":"<p>\u2022 <code>Optional</code> format: <code>\"measureFirst\"</code> | <code>\"dimensionsFirst\"</code></p> <p>Sets the order of values on the label if both a measure and a dimension are present.</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>OrientedLabel.maxFractionDigits</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>OrientedLabel.numberFormat</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>OrientedLabel.numberScale</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"normal\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p> <p>Inherited from</p> <p>OrientedLabel.orientation</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>OrientedLabel.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"top\"</code> | <code>\"bottom\"</code> | <code>\"right\"</code></p> <p>The label position relatively to the marker.</p>"},{"location":"reference/interfaces/Vizzu.Styles.MarkerLabel/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>OrientedLabel.textAlign</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/","title":"Vizzu.Styles.OrientedLabel","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / OrientedLabel</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#interface-orientedlabel","title":"Interface: OrientedLabel","text":"<p>Vizzu.Styles.OrientedLabel</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Label</code></p> <p>\u21b3 <code>OrientedLabel</code></p> <p>\u21b3\u21b3 <code>MarkerLabel</code></p> <p>\u21b3\u21b3 <code>AxisLabel</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#angle","title":"angle","text":"<p>\u2022 <code>Optional</code> angle: <code>Angle</code></p> <p>Additional rotation of the label.</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p> <p>Inherited from</p> <p>Label.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p> <p>Inherited from</p> <p>Label.color</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Label.fontFamily</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Label.fontSize</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Label.fontStyle</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Label.fontWeight</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p> <p>Inherited from</p> <p>Label.maxFractionDigits</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p> <p>Inherited from</p> <p>Label.numberFormat</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p> <p>Inherited from</p> <p>Label.numberScale</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#orientation","title":"orientation","text":"<p>\u2022 <code>Optional</code> orientation: <code>\"normal\"</code> | <code>\"horizontal\"</code> | <code>\"vertical\"</code> | <code>\"tangential\"</code></p> <p>Orientation of the label relatively to the axis or marker it is attached to.</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Label.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Label.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Label.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Label.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.OrientedLabel/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p> <p>Inherited from</p> <p>Label.textAlign</p>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/","title":"Vizzu.Styles.Padding","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Padding</p>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/#interface-padding","title":"Interface: Padding","text":"<p>Vizzu.Styles.Padding</p>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/#hierarchy","title":"Hierarchy","text":"<ul> <li> <p><code>Padding</code></p> <p>\u21b3 <code>Logo</code></p> <p>\u21b3 <code>Plot</code></p> <p>\u21b3 <code>Legend</code></p> <p>\u21b3 <code>Chart</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Padding/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Padding/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/","title":"Vizzu.Styles.Plot","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Plot</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#interface-plot","title":"Interface: Plot","text":"<p>Vizzu.Styles.Plot</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Padding</code></li> </ul> <ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Plot</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Plot/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#marker","title":"marker","text":"<p>\u2022 <code>Optional</code> marker: <code>Marker</code></p> <p>Style settings for the markers.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#overflow","title":"overflow","text":"<p>\u2022 <code>Optional</code> overflow: <code>\"hidden\"</code> | <code>\"visible\"</code></p> <p>Controls drawing outside of the plot area. If hidden, clipping will be set for the boundary of the coordinate system.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#paddingbottom","title":"paddingBottom","text":"<p>\u2022 <code>Optional</code> paddingBottom: <code>Length</code></p> <p>Bottom padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingBottom</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#paddingleft","title":"paddingLeft","text":"<p>\u2022 <code>Optional</code> paddingLeft: <code>Length</code></p> <p>Left padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingLeft</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#paddingright","title":"paddingRight","text":"<p>\u2022 <code>Optional</code> paddingRight: <code>Length</code></p> <p>Right padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingRight</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#paddingtop","title":"paddingTop","text":"<p>\u2022 <code>Optional</code> paddingTop: <code>Length</code></p> <p>Top padding of the element.</p> <p>Inherited from</p> <p>Padding.paddingTop</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#xaxis","title":"xAxis","text":"<p>\u2022 <code>Optional</code> xAxis: <code>Axis</code></p> <p>Style settings for the x-axis - or the angle when using polar coordinates.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Plot/#yaxis","title":"yAxis","text":"<p>\u2022 <code>Optional</code> yAxis: <code>Axis</code></p> <p>Style settings for the y-axis - or the radius when using polar coordinates.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/","title":"Vizzu.Styles.Text","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Text</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#interface-text","title":"Interface: Text","text":"<p>Vizzu.Styles.Text</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Text/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the displayed text.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The color of the displayed text.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#maxfractiondigits","title":"maxFractionDigits","text":"<p>\u2022 <code>Optional</code> maxFractionDigits: <code>number</code></p> <p>The maximum number of digits in fraction part if the text contains a number.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#numberformat","title":"numberFormat","text":"<p>\u2022 <code>Optional</code> numberFormat: <code>\"none\"</code> | <code>\"grouped\"</code> | <code>\"prefixed\"</code></p> <p>The format of the number. Only applicable for texts showing numerical data such as marker and axis labels. 'grouped' uses thousand separators, 'prefixed' uses scientific notation.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#numberscale","title":"numberScale","text":"<p>\u2022 <code>Optional</code> numberScale: <code>string</code></p> <p>Number scale used for prefixed number format.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Text/#textalign","title":"textAlign","text":"<p>\u2022 <code>Optional</code> textAlign: <code>\"center\"</code> | <code>\"left\"</code> | <code>\"right\"</code></p> <p>The alignment of the displayed text.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Ticks/","title":"Vizzu.Styles.Ticks","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Ticks</p>"},{"location":"reference/interfaces/Vizzu.Styles.Ticks/#interface-ticks","title":"Interface: Ticks","text":"<p>Vizzu.Styles.Ticks</p>"},{"location":"reference/interfaces/Vizzu.Styles.Ticks/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Ticks/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>Color of the ticks on the axis.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Ticks/#length","title":"length","text":"<p>\u2022 <code>Optional</code> length: <code>Length</code></p> <p>Length of the ticks on the axis.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Ticks/#linewidth","title":"lineWidth","text":"<p>\u2022 <code>Optional</code> lineWidth: <code>number</code></p> <p>Line width of the ticks on the axis.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Ticks/#position","title":"position","text":"<p>\u2022 <code>Optional</code> position: <code>\"center\"</code> | <code>\"outside\"</code> | <code>\"inside\"</code></p> <p>Position of the ticks on the axis relatively to the axis line.</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/","title":"Vizzu.Styles.Tooltip","text":"<p>Vizzu-Story / Exports / Vizzu / Styles / Tooltip</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#interface-tooltip","title":"Interface: Tooltip","text":"<p>Vizzu.Styles.Tooltip</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#hierarchy","title":"Hierarchy","text":"<ul> <li><code>Font</code></li> </ul> <ul> <li> <p><code>Box</code></p> <p>\u21b3 <code>Tooltip</code></p> </li> </ul>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#properties","title":"Properties","text":""},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#arrowsize","title":"arrowSize","text":"<p>\u2022 <code>Optional</code> arrowSize: <code>number</code></p> <p>Base size of the info bubble arrow</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#backgroundcolor","title":"backgroundColor","text":"<p>\u2022 <code>Optional</code> backgroundColor: <code>Color</code></p> <p>The background color of the element.</p> <p>Inherited from</p> <p>Box.backgroundColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#bordercolor","title":"borderColor","text":"<p>\u2022 <code>Optional</code> borderColor: <code>Color</code></p> <p>The border color of the element.</p> <p>Inherited from</p> <p>Box.borderColor</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#borderradius","title":"borderRadius","text":"<p>\u2022 <code>Optional</code> borderRadius: <code>number</code></p> <p>Corner radius for the info bubble</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#borderwidth","title":"borderWidth","text":"<p>\u2022 <code>Optional</code> borderWidth: <code>number</code></p> <p>The border width of the element.</p> <p>Inherited from</p> <p>Box.borderWidth</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#color","title":"color","text":"<p>\u2022 <code>Optional</code> color: <code>Color</code></p> <p>The foreground color of the tooltip text</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#distance","title":"distance","text":"<p>\u2022 <code>Optional</code> distance: <code>number</code></p> <p>Distance between the data point and the info bubble</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#dropshadow","title":"dropShadow","text":"<p>\u2022 <code>Optional</code> dropShadow: <code>number</code></p> <p>Drop shadow distance from the info bubble</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#fontfamily","title":"fontFamily","text":"<p>\u2022 <code>Optional</code> fontFamily: <code>string</code></p> <p>The family of the font. If not set, it inherits the root style font family.</p> <p>Inherited from</p> <p>Font.fontFamily</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#fontsize","title":"fontSize","text":"<p>\u2022 <code>Optional</code> fontSize: <code>Length</code></p> <p>The size of the font. Percentage values are relative to the root style font size</p> <p>Inherited from</p> <p>Font.fontSize</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#fontstyle","title":"fontStyle","text":"<p>\u2022 <code>Optional</code> fontStyle: <code>\"normal\"</code> | <code>\"italic\"</code> | <code>\"oblique\"</code></p> <p>The style of the font.</p> <p>Inherited from</p> <p>Font.fontStyle</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#fontweight","title":"fontWeight","text":"<p>\u2022 <code>Optional</code> fontWeight: <code>number</code> | <code>\"bold\"</code> | <code>\"normal\"</code></p> <p>The weight of the font, numbers use the same scale as CSS.</p> <p>Inherited from</p> <p>Font.fontWeight</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#layout","title":"layout","text":"<p>\u2022 <code>Optional</code> layout: <code>\"singleLine\"</code> | <code>\"multiLine\"</code></p> <p>The layout of the tooltip text</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#radius","title":"radius","text":"<p>\u2022 <code>Optional</code> radius: <code>number</code></p> <p>Data point marker radius</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#seriesname","title":"seriesName","text":"<p>\u2022 <code>Optional</code> seriesName: <code>string</code></p> <p>Specifies the name of the data series dispalyed at the first position on the tooltip</p>"},{"location":"reference/interfaces/Vizzu.Styles.Tooltip/#shadowcolor","title":"shadowColor","text":"<p>\u2022 <code>Optional</code> shadowColor: <code>Color</code></p> <p>Color of the drop shadow</p>"},{"location":"reference/modules/Vizzu.Anim/","title":"Vizzu.Anim","text":"<p>Vizzu-Story / Exports / Vizzu / Anim</p>"},{"location":"reference/modules/Vizzu.Anim/#namespace-anim","title":"Namespace: Anim","text":"<p>Vizzu.Anim</p>"},{"location":"reference/modules/Vizzu.Anim/#interfaces","title":"Interfaces","text":"<ul> <li>Animation</li> <li>Completing</li> <li>Control</li> <li>ControlOptions</li> <li>GroupOptions</li> <li>Keyframe</li> <li>Options</li> <li>Target</li> </ul>"},{"location":"reference/modules/Vizzu.Anim/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/Vizzu.Anim/#duration","title":"Duration","text":"<p>\u01ac Duration: `${number}s` | `${number}ms` | <code>number</code></p> <p>Duration can be set in seconds or milliseconds. In case no unit is set, it defaults to seconds.</p>"},{"location":"reference/modules/Vizzu.Anim/#easing","title":"Easing","text":"<p>\u01ac Easing: <code>\"none\"</code> | <code>\"linear\"</code> | <code>\"step-start\"</code> | <code>\"step-end\"</code> | <code>\"ease\"</code> | <code>\"ease-in\"</code> | <code>\"ease-out\"</code> | <code>\"ease-in-out\"</code> | `cubic-bezier(${number},${number},${number},${number})`</p>"},{"location":"reference/modules/Vizzu.Anim/#keyframes","title":"Keyframes","text":"<p>\u01ac Keyframes: <code>LazyKeyframe</code>[]</p> <p>Sequence of keyframe descriptors</p>"},{"location":"reference/modules/Vizzu.Anim/#lazykeyframe","title":"LazyKeyframe","text":"<p>\u01ac LazyKeyframe: <code>Keyframe</code> | <code>LazyTarget</code></p> <p>Types, that can represent a Keyframe.</p>"},{"location":"reference/modules/Vizzu.Anim/#lazyoptions","title":"LazyOptions","text":"<p>\u01ac LazyOptions: <code>Options</code> | <code>Duration</code> | <code>null</code></p> <p>All types, which can represent an animation option.</p>"},{"location":"reference/modules/Vizzu.Anim/#lazytarget","title":"LazyTarget","text":"<p>\u01ac LazyTarget: <code>Target</code> | <code>Chart</code> | <code>Snapshot</code></p> <p>All types, which can represent a single animation target chart state.</p>"},{"location":"reference/modules/Vizzu.Anim/#regroupstrategy","title":"RegroupStrategy","text":"<p>\u01ac RegroupStrategy: <code>\"fade\"</code> | <code>\"drilldown\"</code> | <code>\"aggregate\"</code></p> <p>Type of transition when the categorical series differ on the source and the target chart.</p> <ul> <li>fade: the source chart fades out while the target chart fades in;</li> <li>drilldown: markers are splitted to be able to represent the target chart;</li> <li>aggregate: markers are aggregated then splitted differently to be able to   represent the target chart.</li> </ul>"},{"location":"reference/modules/Vizzu.Config/","title":"Vizzu.Config","text":"<p>Vizzu-Story / Exports / Vizzu / Config</p>"},{"location":"reference/modules/Vizzu.Config/#namespace-config","title":"Namespace: Config","text":"<p>Vizzu.Config</p>"},{"location":"reference/modules/Vizzu.Config/#interfaces","title":"Interfaces","text":"<ul> <li>Channel</li> <li>ChannelRange</li> <li>Channels</li> <li>Chart</li> </ul>"},{"location":"reference/modules/Vizzu.Config/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/Vizzu.Config/#channelextrema","title":"ChannelExtrema","text":"<p>\u01ac ChannelExtrema: <code>number</code> | `${number}%` | `${number}min` | `${number}max` | <code>\"auto\"</code></p>"},{"location":"reference/modules/Vizzu.Data/","title":"Vizzu.Data","text":"<p>Vizzu-Story / Exports / Vizzu / Data</p>"},{"location":"reference/modules/Vizzu.Data/#namespace-data","title":"Namespace: Data","text":"<p>Vizzu.Data</p>"},{"location":"reference/modules/Vizzu.Data/#interfaces","title":"Interfaces","text":"<ul> <li>AbstractSeriesInfo</li> <li>Cube</li> <li>CubeData</li> <li>DimensionSeriesInfo</li> <li>Filter</li> <li>MeasureSeriesInfo</li> <li>Metainfo</li> <li>Record</li> <li>Series</li> <li>SeriesMetaInfo</li> <li>TableByRecords</li> <li>TableBySeries</li> </ul>"},{"location":"reference/modules/Vizzu.Data/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/Vizzu.Data/#cuberow","title":"CubeRow","text":"<p>\u01ac CubeRow: <code>Values</code> | <code>CubeRow</code>[]</p>"},{"location":"reference/modules/Vizzu.Data/#filtercallback","title":"FilterCallback","text":"<p>\u01ac FilterCallback: (<code>record</code>: <code>Record</code>) =&gt; <code>boolean</code></p> <p>Type declaration</p> <p>\u25b8 (<code>record</code>): <code>boolean</code></p> <p>Parameters</p> Name Type <code>record</code> <code>Record</code> <p>Returns</p> <p><code>boolean</code></p>"},{"location":"reference/modules/Vizzu.Data/#seriesinfo","title":"SeriesInfo","text":"<p>\u01ac SeriesInfo: <code>DimensionSeriesInfo</code> | <code>MeasureSeriesInfo</code></p>"},{"location":"reference/modules/Vizzu.Data/#serieslist","title":"SeriesList","text":"<p>\u01ac SeriesList: <code>string</code>[] | <code>string</code></p>"},{"location":"reference/modules/Vizzu.Data/#set","title":"Set","text":"<p>\u01ac Set: <code>TableBySeries</code> | <code>TableByRecords</code> | <code>Cube</code></p> <p>Data set is a collection of related data series. Each chart works on a single data set.</p>"},{"location":"reference/modules/Vizzu.Data/#value","title":"Value","text":"<p>\u01ac Value: <code>string</code> | <code>number</code></p> <p>Represents a categorical or data value</p>"},{"location":"reference/modules/Vizzu.Data/#values","title":"Values","text":"<p>\u01ac Values: <code>string</code>[] | <code>number</code>[]</p> <p>List of data values in a series.</p>"},{"location":"reference/modules/Vizzu.Styles/","title":"Vizzu.Styles","text":"<p>Vizzu-Story / Exports / Vizzu / Styles</p>"},{"location":"reference/modules/Vizzu.Styles/#namespace-styles","title":"Namespace: Styles","text":"<p>Vizzu.Styles</p>"},{"location":"reference/modules/Vizzu.Styles/#interfaces","title":"Interfaces","text":"<ul> <li>Axis</li> <li>AxisLabel</li> <li>AxisTitle</li> <li>Box</li> <li>Chart</li> <li>DataPoint</li> <li>Font</li> <li>Guides</li> <li>Interlacing</li> <li>Legend</li> <li>LegendMarker</li> <li>Logo</li> <li>Marker</li> <li>MarkerLabel</li> <li>OrientedLabel</li> <li>Padding</li> <li>Plot</li> <li>Text</li> <li>Ticks</li> <li>Tooltip</li> </ul>"},{"location":"reference/modules/Vizzu.Styles/#type-aliases","title":"Type Aliases","text":""},{"location":"reference/modules/Vizzu.Styles/#angle","title":"Angle","text":"<p>\u01ac Angle: `${number}rad` | `${number}grad` | `${number}deg` | `${number}turn` | <code>number</code></p> <p>Angle can be set in radians, degrees, gradians and turns. Radians is the default unit.</p>"},{"location":"reference/modules/Vizzu.Styles/#color","title":"Color","text":"<p>\u01ac Color: `#${string}` | `rgb(${number},${number},${number})` | `rgba(${number},${number},${number},${number})`</p> <p>The following CSS color formats are available: rgb(), rgba(), #RRGGBB,</p>"},{"location":"reference/modules/Vizzu.Styles/#rrggbbaa-rgb","title":"RRGGBBAA, #RGB.","text":""},{"location":"reference/modules/Vizzu.Styles/#colorgradient","title":"ColorGradient","text":"<p>\u01ac ColorGradient: <code>ColorStop</code> | `${ColorStop},${ColorStop}` | `${ColorStop},${ColorStop},${ColorStop}` | `${ColorStop},${ColorStop},${ColorStop},${ColorStop}` | `${ColorStop},${ColorStop},${ColorStop},${ColorStop},${ColorStop}` | <code>string</code></p> <p>Color gradient is specified by a comma separated list of ColorStops. This is used when a measure is on the color channel.</p>"},{"location":"reference/modules/Vizzu.Styles/#colorpalette","title":"ColorPalette","text":"<p>\u01ac ColorPalette: <code>Color</code> | `${Color} ${Color}` | `${Color} ${Color} ${Color}` | `${Color} ${Color} ${Color} ${Color}` | `${Color} ${Color} ${Color} ${Color} ${Color}` | <code>string</code></p> <p>Color palette is a list of colors separated by spaces. This is used when only dimensions are on the color channel</p>"},{"location":"reference/modules/Vizzu.Styles/#colorstop","title":"ColorStop","text":"<p>\u01ac ColorStop: `${Color} ${number}`</p> <p>Color and position pairs separated by spaces, where position is a number between 0 and 1.</p>"},{"location":"reference/modules/Vizzu.Styles/#colortransform","title":"ColorTransform","text":"<p>\u01ac ColorTransform: `color(${Color})` | `lightness(${number})` | `grayscale(${number})` | `opacity(${number})` | <code>\"none\"</code></p> <p>The following CSS like filters can be used to alter the color:</p> <ul> <li>color: overrides the color.</li> <li>lightness: lightens or darkens the color; 0 means the original color, -1 means   black, 1 means white.</li> <li>grayscale: desaturates the color. 0 means the original color, 1 means fully   desaturated.</li> </ul> <p>none: no change.</p>"},{"location":"reference/modules/Vizzu.Styles/#label","title":"Label","text":"<p>\u01ac Label: <code>Padding</code> &amp; <code>Font</code> &amp; <code>Text</code></p>"},{"location":"reference/modules/Vizzu.Styles/#length","title":"Length","text":"<p>\u01ac Length: `${number}px` | `${number}%` | `${number}em` | <code>number</code></p> <p>Length can be set in pixels or in percentage of the element or the element's font size. Pixel is the default unit.</p>"},{"location":"reference/modules/Vizzu.Styles/#numberscale","title":"NumberScale","text":"<p>\u01ac NumberScale: <code>\"SISymbol\"</code> | <code>\"shortScaleSymbolUS\"</code> | <code>\"shortScaleSymbolUK\"</code> | `${string},${string}` | `${string},${string},${string}` | `${string},${string},${string},${string}` | `${string},${string},${string},${string},${string}` | <code>string</code></p> <p>Number scale for human readable big number formats. There are built in formats:</p> <ul> <li>SI Symbols: k, M, G, ...</li> <li>Short scale with US abbreviations: K, M, B, T</li> <li>Short scale with UK abbreviations: k, m, bn, tn Can be set to custom format   with a comma separated list of strings e.g:   'thousand,million,billion,trillion'</li> </ul>"},{"location":"reference/modules/Vizzu/","title":"Vizzu","text":"<p>Vizzu-Story / Exports / Vizzu</p>"},{"location":"reference/modules/Vizzu/#namespace-vizzu","title":"Namespace: Vizzu","text":""},{"location":"reference/modules/Vizzu/#namespaces","title":"Namespaces","text":"<ul> <li>Anim</li> <li>Config</li> <li>Data</li> <li>Styles</li> </ul>"},{"location":"tutorial/","title":"Tutorial","text":"<p>This is an excellent starting point to get acquainted with <code>Vizzu-Story</code>, as it walks you through the installation and initialization of the extension, introduces the logic it employs and the different settings to control how your animated data stories look and behave.</p> <p>The tutorial is organized into chapters that introduce the concept and the details of <code>Vizzu-Story</code> step-by-step. You can find the list of chapters at the end of this page and in the menu.</p> <p>Since <code>Vizzu-Story</code> is built on top of Vizzu, it's recommended that you learn and understand <code>Vizzu</code> first. The tutorial for <code>Vizzu</code> can be found here.</p>"},{"location":"tutorial/#basic-logic-of-vizzu-story","title":"Basic logic of Vizzu-Story","text":"<p>With <code>Vizzu-Story</code>, you can build and show a <code>story</code> object that contains all of the data being shown throughout the story and the charts created based on that data, arranged into <code>slides</code> and <code>steps</code>. When played,<code>Vizzu-Story</code> automatically adds a set of buttons underneath the chart, via which the users can navigate between the <code>slides</code> within the story.</p> <p><code>slides</code> can contain one or more <code>steps</code>.</p> <p>A <code>step</code> (and a single-step <code>slide</code>) is basically the same as a single chart corresponding to an animate call from <code>Vizzu</code>, with a minor, but important difference:</p> <ul> <li>all of the data has to be added to the story at initialization, and it can be   filtered at every <code>step</code> throughout the <code>story</code>.</li> </ul> <p>In case of a <code>slide</code> with multiple <code>steps</code>, all, but the last <code>steps</code> are interim charts that connect a <code>slide</code> with a previous <code>slide</code> but the animation will not stop at these <code>steps</code> when the <code>story</code> is being played.</p>"},{"location":"tutorial/#installation","title":"Installation","text":"<p>Install via npm:</p> <pre><code>npm install vizzu-story</code></pre> <p>Or use it from CDN:</p> <pre><code>import VizzuPlayer from 'https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js';</code></pre> <p>Visit Installation chapter for more options and details.</p>"},{"location":"tutorial/#usage","title":"Usage","text":"<ul> <li>Data</li> <li>Initialization</li> <li>Building blocks</li> </ul>"},{"location":"tutorial/building_blocks/","title":"Building blocks","text":"<p>In <code>Vizzu-Story</code>, you can build and show a <code>story</code> object that contains all of the data being shown throughout the story and the charts created based on that data, arranged into <code>slides</code> and <code>steps</code>.</p>"},{"location":"tutorial/building_blocks/#slides-and-steps","title":"Slides and steps","text":"<p>Create the data story by defining a sequence of slides. A slide can be a single chart corresponding to an animate call from <code>Vizzu</code>. Or a slide can be a sequence of animation calls, in which case all of these animations will be played until the last one in the sequence, allowing for more complex transitions between slides.</p> <pre><code>const slides = [\n    // This slide contains a single animation step\n    {\n        config: {\n            x: 'Foo',\n            y: 'Bar'\n        }\n    },\n    // This slide contains multiple steps\n    [{\n        config: {\n            color: 'Foo',\n            x: 'Baz',\n            geometry: 'circle'\n        }\n    }, {\n        config: {\n            color: 'Foo',\n            x: 'Baz',\n            geometry: 'rectangle'\n        }\n    }],\n];</code></pre> <p>Navigation controls beneath the chart will navigate between the slides. You can use the <code>PgUp</code> and <code>PgDn</code> buttons, left and right arrows to navigate between slides, and the <code>Home</code> and <code>End</code> buttons to jump to the first or last slide.</p> <p>On each chart, you can define the chart configuration and style with the same objects as in <code>Vizzu</code>. However, you can not modify the underlying data between the slides, only the data filter used.</p> <pre><code>interface Chart {\n  config?: Vizzu.Config.Chart;\n  filter?: Vizzu.Data.FilterCallback | null;\n  style?: Vizzu.Styles.Chart;\n  animOptions?: Vizzu.Anim.Options;\n}</code></pre> <pre><code>const slides = [\n    // This slide sets config, filter, style and animOptions\n    {\n        config: {\n            x: 'Foo',\n            y: 'Bar'\n        },\n        filter: record =&gt; record['Foo'] === 'Bob',\n        style: {\n            plot: {\n                marker: {\n                    colorPalette: '#FF0000'\n                }\n            }\n        },\n        animOptions: {\n            duration: 1\n        }\n    }\n];</code></pre> <p>Tip</p> <p>Check Vizzu - Filtering &amp; adding new records chapter and Vizzu - Style chapter for more details on data filtering and style options.</p>"},{"location":"tutorial/building_blocks/#story","title":"Story","text":"<p>Put the <code>data</code> object (described in the Data chapter) and the slide list into the <code>story</code> descriptor object.</p> <pre><code>const story = {\n    data: data,\n    slides: slides\n};</code></pre> <p>Here you can also set the <code>story</code> <code>style</code> property to set the chart style used for the whole <code>story</code>.</p> <pre><code>const style = {\n    title: {\n        fontSize: 50\n    }\n};\n\nconst story = {\n    data: data,\n    style: style,\n    slides: slides\n};</code></pre> <p>Then set up the created element with the configuration object:</p> <pre><code>const vp = document.querySelector('vizzu-player');\nvp.slides = story;</code></pre>"},{"location":"tutorial/building_blocks/#chart-features","title":"Chart features","text":"<p>You can enable or disable chart features, such as the <code>Tooltip</code> that appears if the viewer hovers their mouse over a specific element of the chart.</p> <pre><code>vp.initializing.then((chart) =&gt; {\n    chart.feature(\"tooltip\", true);\n});</code></pre> <p>Tip</p> <p>See Vizzu - Axes, title, tooltip chapter for more details on chart features.</p>"},{"location":"tutorial/building_blocks/#chart-events","title":"Chart events","text":"<p>You have many more options to change the look and feel of the <code>story</code> by using events.</p> <pre><code>vp.initializing.then((chart) =&gt; {\n    chart.on(\"click\", (event) =&gt; {\n        alert(JSON.stringify(event.data))\n    });\n});</code></pre> <p>Tip</p> <p>See Vizzu - Events chapter for more details on events.</p>"},{"location":"tutorial/data/","title":"Data","text":"<p>You can use the same data definition formats as in the <code>Vizzu</code> library. Similarly, there are two types of data series: dimensions and measures.</p> <p>Note</p> <p>Please note, that all of the data used throughout your data story has to be added to the story at initialization. The data being shown can be filtered at each step.</p> <p>Tip</p> <p>See Vizzu - Data chapter for more details about data.</p> <p>Here's some sample code for common use cases.</p>"},{"location":"tutorial/data/#specify-data-by-series","title":"Specify data by series","text":"<pre><code>const data = {\n    series: [{\n        name: 'Foo',\n        values: ['Alice', 'Bob', 'Ted']\n    }, {\n        name: 'Bar',\n        values: [15, 32, 12]\n    }, {\n        name: 'Baz',\n        values: [5, 3, 2]\n    }]\n};</code></pre>"},{"location":"tutorial/data/#specify-data-by-records","title":"Specify data by records","text":"<pre><code>const data = {\n    series: [{\n        name: 'Foo',\n        type: 'dimension',\n    }, {\n        name: 'Bar',\n        type: 'measure',\n    }, {\n        name: 'Baz',\n        type: 'measure',\n    }],\n    records: [\n        ['Alice', 15, 5],\n        ['Bob', 32, 3],\n        ['Ted', 12, 2],\n    ],\n};</code></pre>"},{"location":"tutorial/initialization/","title":"Initialization","text":""},{"location":"tutorial/initialization/#import","title":"Import","text":"<p>In a script module element import the extension from <code>CDN</code> or local install:</p> <pre><code>&lt;script type=\"module\"&gt;\n  import VizzuPlayer from \n  'https://cdn.jsdelivr.net/npm/vizzu-story@0.4/dist/vizzu-story.min.js';\n&lt;/script&gt;</code></pre>"},{"location":"tutorial/initialization/#constructor","title":"Constructor","text":"<p>In order to initialize a <code>VizzuPlayer</code> with a <code>VizzuController</code> that will contain the rendered <code>story</code>, create a <code>vizzu-player</code> <code>HTML</code> element:</p> <pre><code>&lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;</code></pre>"},{"location":"tutorial/initialization/#size","title":"Size","text":"<p><code>Vizzu-Story</code> tries to apply the ideal size for the story, but you can also set them manually via the <code>width</code> and <code>height</code> style properties of the <code>vizzu-player</code> <code>HTML</code> element:</p> <p>Set size in <code>HTML</code></p> <pre><code>&lt;head&gt;\n  &lt;style&gt;\n    vizzu-player {\n      width: 100%;\n      height: 400px;\n    }\n  &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;vizzu-player controller&gt;&lt;/vizzu-player&gt;\n&lt;/body&gt;</code></pre> <p>or in <code>JavaScript</code>:</p> <pre><code>const vp = document.querySelector('vizzu-player');\nvp.style.cssText = 'width: 100%;height: 400px;';</code></pre>"},{"location":"tutorial/initialization/#html-attributes","title":"HTML attributes","text":""},{"location":"tutorial/initialization/#vizzu-url","title":"vizzu-url","text":"<p><code>Vizzu-Story</code> requires and downloads the Vizzu <code>JavaScript</code>/<code>C++</code> library from <code>jsDelivr CDN</code>, but you can also use a different or self-hosted version of it.</p> <p>Set <code>Vizzu</code> via the <code>vizzu-url</code> <code>HTML</code> attribute</p> <pre><code>&lt;vizzu-player controller vizzu-url=\"&lt;url&gt;/vizzu.min.js\"&gt;&lt;/vizzu-player&gt;</code></pre> <p>or add it to <code>window</code>:</p> <pre><code>import Vizzu from '&lt;url&gt;/vizzu.min.js';\n\n\nwindow.Vizzu = Vizzu;</code></pre>"},{"location":"tutorial/initialization/#hash-navigation","title":"hash-navigation","text":"<p>If you add <code>hash-navigation</code> attribute, slides can be selected using the <code>URL</code> hash (<code>#</code> part), for example <code>presentation.html#3</code> selects slide <code>3</code>. You can also use negative numbers, where <code>-1</code> means the last slide.</p> <pre><code>&lt;vizzu-player controller hash-navigation&gt;&lt;/vizzu-player&gt;</code></pre>"},{"location":"tutorial/initialization/#start-slide","title":"start-slide","text":"<p>You can start the story on a specific slide via the <code>start-slide</code> <code>HTML</code> attribute. You can also use negative numbers, where <code>-1</code> means the last slide.</p> <pre><code>&lt;vizzu-player controller start-slide=\"3\"&gt;&lt;/vizzu-player&gt;</code></pre>"},{"location":"tutorial/initialization/#custom-spinner","title":"custom-spinner","text":"<p>You can use a custom loading animation. Set spinner via the <code>custom-spinner</code> <code>HTML</code> attribute:</p> <pre><code>&lt;vizzu-player controller custom-spinner=\"loadinganim.svg\"&gt;&lt;/vizzu-player&gt;</code></pre>"}]}